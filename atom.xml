<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Scott Wang&#39;s blog</title>
  <subtitle>越努力，越幸运</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.54yongf.com/"/>
  <updated>2017-02-19T05:20:49.000Z</updated>
  <id>http://blog.54yongf.com/</id>
  
  <author>
    <name>老码</name>
    <email>1059613472@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>No65-【原】-胡说八道</title>
    <link href="http://blog.54yongf.com/%E6%9D%82%E8%B0%88/65.html"/>
    <id>http://blog.54yongf.com/杂谈/65.html</id>
    <published>2017-02-19T05:20:49.000Z</published>
    <updated>2017-02-19T05:20:49.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><blockquote>
<p>最近在自学UWP开发，此为背景</p>
</blockquote>
<a id="more"></a>
<h2 id="胡说八道">胡说八道</h2><p>在使用VS2015编译项目，想部署到手机上的时候，出了点问题，我安装的是VS2015的中文版，除了错误之后，错误信息也是中文的，没办法，去百度搜索吧，可惜，我翻了又翻，找了又找，就只在博客园找到一篇文章稍微和我的问题有点联系。唉，我想这除了UWP生态还不完善，玩的人不那么多的原因之外，也有错误信息是中文的原因吧。。。于是我又把这一坨错误信息丢到百度翻译，然后Google搜索，还真在StackOverflow找到了一些类似的问题和回答，解决了我的问题，所以，还是英文版吧。</p>
<h2 id="VS2017">VS2017</h2><p>VS2017将会在2017年3月7日上市，根据自己的尿性，肯定得装最新版，所以还是用VS2017英文原版吧。。。</p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :-)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;最近在自学UWP开发，此为背景&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://blog.54yongf.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="杂谈" scheme="http://blog.54yongf.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>No64-【原】-推荐一个网站：图标工厂</title>
    <link href="http://blog.54yongf.com/%E6%9D%82%E8%B0%88/65.html"/>
    <id>http://blog.54yongf.com/杂谈/65.html</id>
    <published>2017-02-16T08:49:53.000Z</published>
    <updated>2017-02-16T08:49:53.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><blockquote>
<p>作为一名移动开发者，平时如果要开发一些小应用，那么，应用图标必不可少，有了图标原图之后，制作各种不同比例的应用图标也得费事，更何况还有三大平台（滑稽脸→_→），如果这些东西能够自动生成就好了，对，有这样一个网站，专门帮你干各种脏活累活。</p>
</blockquote>
<a id="more"></a>
<h2 id="图标工厂">图标工厂</h2><p><a href="http://icon.wuruihong.com/" target="_blank" rel="external">图标工厂</a><br>网站截图如下：<br><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No64-2017-02-16_165656.png" alt="图标工厂"></p>
<p>移动应用图标生成工具，一键生成所有尺寸的应用图标。同时生成iOS、Android、Windows Phone平台的图标，遵循Apple、Google、Microsoft<br>官方标准，你可以试试。</p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :-)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;作为一名移动开发者，平时如果要开发一些小应用，那么，应用图标必不可少，有了图标原图之后，制作各种不同比例的应用图标也得费事，更何况还有三大平台（滑稽脸→_→），如果这些东西能够自动生成就好了，对，有这样一个网站，专门帮你干各种脏活累活。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://blog.54yongf.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="杂谈" scheme="http://blog.54yongf.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="资源" scheme="http://blog.54yongf.com/tags/%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>No63-【原】-UWP开发中SQLite的使用：结合EntityFramework</title>
    <link href="http://blog.54yongf.com/UWP/63.html"/>
    <id>http://blog.54yongf.com/UWP/63.html</id>
    <published>2017-02-16T07:12:48.000Z</published>
    <updated>2017-02-16T07:12:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><blockquote>
<p>我爱UWP，正如我所爱的这片土地（滑稽→_→）。</p>
</blockquote>
<h2 id="环境">环境</h2><p>系统：Windows10一周年版<br>软件：Visual Studio 2015<br>硬件：可选（Lumia650/Lumia640/Lumia640XL/Lumia950/Lumia950XL等能够运行新版Windows10 Mobile系统的Windows手机）</p>
<a id="more"></a>
<h2 id="UWP上的数据存储">UWP上的数据存储</h2><p>如果要在UWP上使用数据存储，可以使用SQLite，这东西挺好用，而且SQLite已经进入了UWP官方的SDK，得到了官方支持，可靠。<br>在UWP上使用SQLite可以有多种方式，可以自行diy，也可以使用UWP SDK中的SQLite，本文中，使用的是EntityFramework + UWP SDK’s SQLite的方式。</p>
<h2 id="新建项目">新建项目</h2><p>第一步是新建一个UWP的C#项目，使用Visual Studio 2015，具体过程不再赘述。</p>
<h2 id="添加依赖">添加依赖</h2><p>第二步是添加项目依赖：</p>
<ol>
<li>使用NuGet，选择<code>工具-&gt;NuGet包管理器-&gt;管理解决方案的NuGet程序包</code>，如图：<br><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No63-2017-02-16_153748.png" alt="进入NuGet"></li>
<li>使用NuGet包管理器更新<code>Microsoft.NETCore.UniversalWindowsPlatform</code>，注意！，更新到5.2.2即可，不要更新到5.3.0，<br>因为5.3.0是VS2017专用的……<br><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No63-2017-02-16_154113.png" alt="安装依赖"></li>
<li>安装<code>Microsoft.EntityFrameworkCore.Sqlite</code>, <code>Microsoft.EntityFrameworkCore.Tools –Pre</code>依赖，（选中包括预发行版）</li>
<li>依赖添加完毕</li>
</ol>
<h2 id="编写代码">编写代码</h2><p>使用EntityFramework进行编码，可以参考<a href="https://docs.microsoft.com/en-us/ef/core/get-started/uwp/getting-started#create-your-model" target="_blank" rel="external">官方文档</a></p>
<h2 id="编译运行">编译运行</h2><p>编译运行，在本机上跑是没有任何问题的，如果你只是要在本机上运行，那么本文到此结束。</p>
<h2 id="在移动设备上运行">在移动设备上运行</h2><p>不过，如果你需要在移动设备上进行运行，那么仅仅参考上述官方文档还不够，因为你直接跑会报错，还是因为缺少某些依赖。<br>你需要安装VS2015扩展–SQLite for UniversalWindowsPlatform。安装完毕之后，重启VS2015，然后在项目下添加引用，如图：<br><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No63-2017-02-16_155445.png" alt="添加引用"></p>
<h2 id="大功告成">大功告成</h2><p>至此，一个完整的UWP应用OK了，既能在PC上，也能在移动设备上运行。</p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :-)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;我爱UWP，正如我所爱的这片土地（滑稽→_→）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;环境&quot;&gt;环境&lt;/h2&gt;&lt;p&gt;系统：Windows10一周年版&lt;br&gt;软件：Visual Studio 2015&lt;br&gt;硬件：可选（Lumia650/Lumia640/Lumia640XL/Lumia950/Lumia950XL等能够运行新版Windows10 Mobile系统的Windows手机）&lt;/p&gt;
    
    </summary>
    
      <category term="UWP" scheme="http://blog.54yongf.com/categories/UWP/"/>
    
    
      <category term="C#" scheme="http://blog.54yongf.com/tags/C/"/>
    
      <category term="Microsoft" scheme="http://blog.54yongf.com/tags/Microsoft/"/>
    
      <category term="UWP" scheme="http://blog.54yongf.com/tags/UWP/"/>
    
      <category term="移动开发" scheme="http://blog.54yongf.com/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>No62-【原】-UWP真机调试</title>
    <link href="http://blog.54yongf.com/UWP/62.html"/>
    <id>http://blog.54yongf.com/UWP/62.html</id>
    <published>2017-02-16T05:32:36.000Z</published>
    <updated>2017-02-16T05:32:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><blockquote>
<p>我爱UWP，正如我所爱的这片土地（滑稽→_→）。</p>
</blockquote>
<h2 id="环境">环境</h2><p>系统：Windows10一周年版<br>软件：Visual Studio 2015<br>硬件：Lumia650/Lumia640/Lumia640XL/Lumia950/Lumia950XL等能够运行新版Windows10 Mobile系统的Windows手机</p>
<a id="more"></a>
<h2 id="在UWP开发中进行真机调试">在UWP开发中进行真机调试</h2><p>在VS2015中开发好一个Demo之后，想在自己的Lumia650上安装试试，折腾了一会之后，终于弄好了，步骤如下：</p>
<ol>
<li>在设置中开启手机的开发者模式</li>
<li>当然，首先你的项目得本地编译通过，然后按照下图所示进行操作：<br><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No62-1.png" alt="设置"></li>
<li>这时候应该OK了，如果不OK， 可能是没开启手机的开发者模式，或者根据对应的错误信息进行搜索</li>
</ol>
<h2 id="多说一句">多说一句</h2><p>如果是使用Windows平板等设备进行UWP开发调试，可以进行<code>远程调试</code>，可以参考<a href="https://my.oschina.net/jjyuangu/blog/716941?nocache=1487140944453" target="_blank" rel="external">这篇博客</a></p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :-)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;我爱UWP，正如我所爱的这片土地（滑稽→_→）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;环境&quot;&gt;环境&lt;/h2&gt;&lt;p&gt;系统：Windows10一周年版&lt;br&gt;软件：Visual Studio 2015&lt;br&gt;硬件：Lumia650/Lumia640/Lumia640XL/Lumia950/Lumia950XL等能够运行新版Windows10 Mobile系统的Windows手机&lt;/p&gt;
    
    </summary>
    
      <category term="UWP" scheme="http://blog.54yongf.com/categories/UWP/"/>
    
    
      <category term="C#" scheme="http://blog.54yongf.com/tags/C/"/>
    
      <category term="Microsoft" scheme="http://blog.54yongf.com/tags/Microsoft/"/>
    
      <category term="UWP" scheme="http://blog.54yongf.com/tags/UWP/"/>
    
      <category term="移动开发" scheme="http://blog.54yongf.com/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
      <category term="调试" scheme="http://blog.54yongf.com/tags/%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>No61-【原】-Linux下Jetbrains系软件无法输入中文</title>
    <link href="http://blog.54yongf.com/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/61.html"/>
    <id>http://blog.54yongf.com/开发工具/61.html</id>
    <published>2016-09-07T11:11:10.000Z</published>
    <updated>2016-09-07T11:11:10.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><blockquote>
<p>Jetbrains大法好，的确，他家多有良心，出品的开发工具不仅好使，而且人家还支持三大平台，真是没谁了。今天，我们来聊聊Ubuntu下无法输入中文的问题。</p>
</blockquote>
<h2 id="在Jetbrains系IDE中输入中文">在Jetbrains系IDE中输入中文</h2><p>系统：Ubuntu16.04<br>软件：IDEA/Clion/Pycharm/PHPStorm/Rider<br>问题：Fcitx，搜狗输入法，不能输入中文<br>解决：去安装目录bin文件夹下找到idea.sh,用编辑器打开，添加：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">XMODIFIERS=<span class="string">"@im=fcitx"</span></span><br><span class="line"><span class="built_in">export</span> XMODIFIERS</span><br></pre></td></tr></table></figure>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :-)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Jetbrains大法好，的确，他家多有良心，出品的开发工具不仅好使，而且人家还支持三大平台，真是没谁了。今天，我们来聊聊Ubuntu下无法输入中文的问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;
    
    </summary>
    
      <category term="开发工具" scheme="http://blog.54yongf.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Jetbrains" scheme="http://blog.54yongf.com/tags/Jetbrains/"/>
    
  </entry>
  
  <entry>
    <title>No60-【原】-Java基础23事之彻底搞定Return-Finally</title>
    <link href="http://blog.54yongf.com/Java/60.html"/>
    <id>http://blog.54yongf.com/Java/60.html</id>
    <published>2016-08-20T09:14:11.000Z</published>
    <updated>2016-08-20T09:14:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><blockquote>
<p>也许你已经看过好几篇类似的文章了，但是还没搞定Return-Finally问题？那不妨给我一次机会，看看我的这篇文章，也许有收获呢(⊙o⊙)</p>
</blockquote>
<a id="more"></a>
<h2 id="再谈Java中的Return-Finally问题">再谈Java中的Return-Finally问题</h2><p>先来看看下面这段代码：  </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">testReturnFinally</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> x;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            x++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>你能马上回答出上述函数的返回值么？如果是，并且知其所以然，那么你就可以直接跳转到本文的后面部分了；如果不是，且听我娓娓道来。  </p>
<h2 id="先说说返回值的事">先说说返回值的事</h2><p>我们都知道，所谓finally，就是无论出现什么情况，在<code>try</code>结束或<code>catch</code>块结束之后执行的都是<code>finally</code>代码块。那么这是如何实现的呢？对！我们可以<br>在<code>try</code>和<code>catch</code>代码块之后插入<code>finally</code>代码块，这样，无论是执行哪一个分支，最后一定会执行<code>finally</code>代码块！</p>
<h2 id="字节码">字节码</h2><p>那么，我们就来看看上述Java代码的字节码吧，如何查看？终端下使用指令<code>javap -verbose TestReturnFinally.class</code>，其中，TestReturnFinally.class是要查看的字节码文件。<br>上述Java代码的字节码如下所示：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">0</span>: iconst_1                        <span class="comment">//将int型1推送至Java虚拟机栈顶</span></span><br><span class="line"> <span class="number">1</span>: istore_0                        <span class="comment">//将栈顶int型数值存入第一个本地变量（x=1）</span></span><br><span class="line"> <span class="number">2</span>: iload_0                         <span class="comment">//将本地第一个int型本地变量推送至Java虚拟机栈顶</span></span><br><span class="line"> <span class="number">3</span>: istore_1                        <span class="comment">//将栈顶int型数值存入第二个本地变量，方法返回前将返回值存在一个临时变量中</span></span><br><span class="line"> <span class="number">4</span>: iinc          <span class="number">0</span>, <span class="number">1</span>              <span class="comment">//第4,7条指令是由编译器强行插入到第8条指令之前的，为了确保finally一定执行</span></span><br><span class="line"> <span class="number">7</span>: iload_1                        <span class="comment">//指令4：将第一个本地变量自增1（x++） 指令7：将第2个本地变量推送至栈顶</span></span><br><span class="line"> <span class="number">8</span>: ireturn                         <span class="comment">//方法返回，返回值为第二个本地变量，因此返回值为1！</span></span><br><span class="line"> <span class="number">9</span>: astore_2                      <span class="comment">//关于第9-14条指令，我其实不是特别清楚，我的猜想是因为我们没有在代码中明确进行</span></span><br><span class="line">                                        <span class="comment">//catch操作，所以编译器插入了一个catch的操作，实际上可能没什么用......</span></span><br><span class="line"><span class="number">10</span>: iinc          <span class="number">0</span>, <span class="number">1</span></span><br><span class="line"><span class="number">13</span>: aload_2</span><br><span class="line"><span class="number">14</span>: athrow</span><br></pre></td></tr></table></figure>
<p>编译出来之后共14条字节码指令，指令的相关含义已经在后面注明了。看完上述字节码，我们可以知道：</p>
<ol>
<li>try中的return之后，返回值其实已经确定了，真正的返回值被存在Java虚拟机栈的一个临时变量中，我们之后对x进行的操作并不会改变返回值的大小，只是改变的x的大小。</li>
<li>不过这里有一点需要注意，如果在finally中也有return语句，那么finally中的return会覆盖之前try块中的return语句，所以返回值会发生变化，你可以亲自写代码试验一下。</li>
</ol>
<h2 id="用图示来增进理解吧">用图示来增进理解吧</h2><p>还是上述那段代码，我们画个图来增强一下理解：  </p>
<p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No60-Java-Return-Finally.bmp" alt="图解"></p>
<p>对上图的一些说明：</p>
<ol>
<li>在JVM中，Java虚拟机栈包含操作数栈和局部变量，但是在上图中，我将其画成了两列，这只是为了方便理解。</li>
</ol>
<h2 id="参考资料">参考资料</h2><p>深入理解Java虚拟机-周志明<br><a href="http://www.cnblogs.com/averey/p/4379646.html" target="_blank" rel="external">你真的了解try{ return }finally{}中的return？</a></p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :-)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;也许你已经看过好几篇类似的文章了，但是还没搞定Return-Finally问题？那不妨给我一次机会，看看我的这篇文章，也许有收获呢(⊙o⊙)&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java" scheme="http://blog.54yongf.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://blog.54yongf.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>No59-【原】-Java并发编程23事之AtomicInteger的那点事儿</title>
    <link href="http://blog.54yongf.com/Java/59.html"/>
    <id>http://blog.54yongf.com/Java/59.html</id>
    <published>2016-08-19T15:11:51.000Z</published>
    <updated>2016-08-19T15:11:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="首先">首先</h2><p>请允许我做一次标题党（严肃脸），在这篇文章，咱不谈并发编程，也不论AtomicInteger，说点儿我初次使用AtomicInteger时的趣事儿。  </p>
<a id="more"></a>
<h2 id="我的第一次">我的第一次</h2><p>话说当初在我看<strong>深入理解Java虚拟机</strong>一书的时候，看到了AtomicInteger这个类，它是并发条件下的原子自增运算，于是我就打开了IDEA，<br>输入这段示例代码，想看看运行结果：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.atomic.AtomicInteger;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by scottwang on 16-8-19.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AtomicTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">volatile</span> <span class="keyword">int</span> race = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> AtomicInteger ai = <span class="keyword">new</span> AtomicInteger(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">increase</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        race++;</span><br><span class="line">        ai.incrementAndGet();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> THREAD_COUNT = <span class="number">10000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        Thread[] threads = <span class="keyword">new</span> Thread[THREAD_COUNT];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; THREAD_COUNT; i++) &#123;</span><br><span class="line">            threads[i] = <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">                increase();</span><br><span class="line">            &#125;);</span><br><span class="line">            threads[i].start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"race = "</span> + race);</span><br><span class="line">        System.out.println(<span class="string">"ai = "</span> + ai);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>蛋是，奇迹发生了！运行结果是这样的：  </p>
<pre><code>race = <span class="number">9994</span>
ai = <span class="number">9999</span>
</code></pre><p>我的天，MD制杖，什么鬼，你跟我说结果不是10000？我把头给看下来，再多运行几次？好勒，次次结果都不一样，我的天！这难道是JDK版本的<br>问题？不对啊，我的是Ubuntu 16.04的JDK8.0，怎么可能有问题！难道是BUG了？我的天，我竟然发现了JDK的BUG，怎么办，好紧张。。。。。。  </p>
<h2 id="真相只有一个">真相只有一个</h2><p>最后，我才知道，原来是我太猴急了，在开启完全部线程之后，直接读取race和ai的值，这要能对就怪了，结果要是10000才是BUG呢。于是，<br>在输出结果直接加入<code>Thread.sleep(500);</code>，让线程先睡会儿，然后再读取结果，对了！<br>这件事情告诉我们，细节决定成败。开个玩笑，我们下回再见！</p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :-)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;首先&quot;&gt;首先&lt;/h2&gt;&lt;p&gt;请允许我做一次标题党（严肃脸），在这篇文章，咱不谈并发编程，也不论AtomicInteger，说点儿我初次使用AtomicInteger时的趣事儿。  &lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://blog.54yongf.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://blog.54yongf.com/tags/Java/"/>
    
      <category term="并发编程" scheme="http://blog.54yongf.com/tags/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>No58-【原】-放一下我的网易云音乐歌单吧</title>
    <link href="http://blog.54yongf.com/%E4%B9%90%E6%8A%A5/58.html"/>
    <id>http://blog.54yongf.com/乐报/58.html</id>
    <published>2016-08-17T22:45:17.000Z</published>
    <updated>2016-08-17T22:45:17.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="我的网易云音乐">我的网易云音乐</h2><blockquote>
<p>客官，你要一份云音乐吗？下面是我的几张歌单，每首歌都是亲自挑选，也许也有你的菜哦。我的云音乐用户名是ScottWang1024。</p>
</blockquote>
<a id="more"></a>
<h2 id="我喜欢的">我喜欢的</h2><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="450" src="http://music.163.com/outchain/player?type=0&id=316426292&auto=0&height=430"></iframe>

<h2 id="Lover（国语歌单）">Lover（国语歌单）</h2><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="450" src="http://music.163.com/outchain/player?type=0&id=316426381&auto=0&height=430"></iframe>

<h2 id="i18n（外语歌单）">i18n（外语歌单）</h2><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="450" src="http://music.163.com/outchain/player?type=0&id=316410000&auto=0&height=430"></iframe>

<h2 id="light（轻音乐歌单）">light（轻音乐歌单）</h2><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="450" src="http://music.163.com/outchain/player?type=0&id=317165984&auto=0&height=430"></iframe>

<h2 id="越来粤精彩（粤语歌单）">越来粤精彩（粤语歌单）</h2><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="450" src="http://music.163.com/outchain/player?type=0&id=323469873&auto=0&height=430"></iframe>


<h2 id="感谢">感谢</h2><p><font size="4"><br>乐报,不定期更新,歌慌了?来乐报 :-)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;我的网易云音乐&quot;&gt;我的网易云音乐&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;客官，你要一份云音乐吗？下面是我的几张歌单，每首歌都是亲自挑选，也许也有你的菜哦。我的云音乐用户名是ScottWang1024。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="乐报" scheme="http://blog.54yongf.com/categories/%E4%B9%90%E6%8A%A5/"/>
    
    
      <category term="乐报" scheme="http://blog.54yongf.com/tags/%E4%B9%90%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>No57-【原】-Ubuntu 14.04下Qt5.6中Qt Creator中文输入的那些坑</title>
    <link href="http://blog.54yongf.com/Qt/57.html"/>
    <id>http://blog.54yongf.com/Qt/57.html</id>
    <published>2016-07-13T17:58:32.000Z</published>
    <updated>2016-08-17T22:16:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="闲扯两句">闲扯两句</h2><p><font size="4"></font></p>
<blockquote>
<p>已经好久没有写博客了，我上一篇博客大概是在５月１６号，今天７月１４号，大概两个月．这段时间一直在弄一些其他事情，比如课程设计，再比如<code>期末考试</code>，不敢怠慢．<br>最近在学习Linux平台的Qt程序设计，但是有个很蛋疼的问题，Qt Creator不支持中文输入！！！我的个乖乖，为了弄好这个，百度了好多教程，走了很多弯路，同时也认识到网上存在一些错误的观点，特地记录一下，希望能有所帮助．</p>
</blockquote>
<h2 id="软件环境">软件环境</h2><p><font size="4"><br>操作系统: Ubuntu 14.04 64bit<br>Qt版本: Qt5.6 </font></p>
<a id="more"></a>
<h2 id="啰嗦一下">啰嗦一下</h2><p><font size="4"><br>如果你是使用ibus输入系统,看到这里就可以结束了,这里针对的是fcitx框架的输入法(比如说良心搜狗输入法).<br>以搜狗输入法为例(fctix),要使其支持中文输入,关键是要编译出共享库<code>libfcitxplatforminputcontextplugin.so</code>, 这个东西好像是动态库,所以是因人而异的,所以即使你是和我一个版本的操作系统,我也不能将我的库共享给你,<strong>你得自己编译!!!!</strong><br>必须指出,网上好多教程在文章中共享的<code>libfcitxplatforminputcontextplugin.so</code>库是不可用的,因为这家伙是动态库啊啊啊啊啊!!!!!! 所以啊,不要用别人编译好的,十有八九不管用,自己老老实实编译!<br>下面是具体的编译步骤以及可能出现的问题及其解决方法.</font></p>
<h2 id="编译步骤以及可能出现的问题及其解决方案">编译步骤以及可能出现的问题及其解决方案</h2><p><font size="4"><br>在这一点上,我不想再重复造轮子了,我在开源中国找到了一篇相当完整的博客,你可以按照他的编译步骤慢慢来,出错了也没关系,人家文章中都有解决方案(在此感谢 =_=).<br>参考链接: <a href="http://my.oschina.net/lieefu/blog/505363" target="_blank" rel="external">http://my.oschina.net/lieefu/blog/505363</a><br>很重要的一点,编译出错不要紧,要有耐心,我也是编译了两次才编译成功的(主要是要处理各种依赖问题)<br>如果编译失败,最好删除整个fcitx-qt5文件夹重新弄.</font></p>
<h2 id="最后">最后</h2><p><font size="4"><br>放张图吧,作为这顿折腾的最终战果:<br><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No57-2016-07-14%2002:43:11%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png" alt="中文OK">  </font></p>
<p>最后,感谢开源!</p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :-)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;闲扯两句&quot;&gt;闲扯两句&lt;/h2&gt;&lt;p&gt;&lt;font size=4&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;已经好久没有写博客了，我上一篇博客大概是在５月１６号，今天７月１４号，大概两个月．这段时间一直在弄一些其他事情，比如课程设计，再比如&lt;code&gt;期末考试&lt;/code&gt;，不敢怠慢．&lt;br&gt;最近在学习Linux平台的Qt程序设计，但是有个很蛋疼的问题，Qt Creator不支持中文输入！！！我的个乖乖，为了弄好这个，百度了好多教程，走了很多弯路，同时也认识到网上存在一些错误的观点，特地记录一下，希望能有所帮助．&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;软件环境&quot;&gt;软件环境&lt;/h2&gt;&lt;p&gt;&lt;font size=4&gt;&lt;br&gt;操作系统: Ubuntu 14.04 64bit&lt;br&gt;Qt版本: Qt5.6 &lt;/p&gt;
    
    </summary>
    
      <category term="Qt" scheme="http://blog.54yongf.com/categories/Qt/"/>
    
    
      <category term="Linux" scheme="http://blog.54yongf.com/tags/Linux/"/>
    
      <category term="Qt" scheme="http://blog.54yongf.com/tags/Qt/"/>
    
      <category term="Qt Creator" scheme="http://blog.54yongf.com/tags/Qt-Creator/"/>
    
      <category term="Ubuntu" scheme="http://blog.54yongf.com/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>No56-【原】-Java基础之方法传参问题</title>
    <link href="http://blog.54yongf.com/Java/56.html"/>
    <id>http://blog.54yongf.com/Java/56.html</id>
    <published>2016-05-16T02:18:34.000Z</published>
    <updated>2016-08-17T22:28:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p><font size="4"><br>本文讲述的是Java中参数传递相关的一些知识点.</font></p>
<a id="more"></a>
<p>先来看一段代码:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by yongf on 16-5-16.</span><br><span class="line"> * 参数传递</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParameterPass</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Student student1 = <span class="keyword">new</span> Student(<span class="string">"张三"</span>, <span class="string">"001"</span>);</span><br><span class="line">        System.out.println(<span class="string">"[修改前]: "</span> + student1);</span><br><span class="line"></span><br><span class="line">         modifyInfo(student1);</span><br><span class="line">        System.out.println(<span class="string">"[修改后]: "</span> + student1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">modifyInfo</span><span class="params">(Student student)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"[正在修改]: "</span> + student);</span><br><span class="line">        student = <span class="keyword">new</span> Student(student.name, <span class="string">"002"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    String name;</span><br><span class="line">    String id;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name, String id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Student&#123;"</span> +</span><br><span class="line">                <span class="string">"name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", id='"</span> + id + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>你能立刻写出这段代码的输出结果么?如果可以,那么后面就不用看了;如果不能,那就继续.</p>
<p>这段代码的运行结果如下:</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="link_reference">修改前</span>]:<span class="link_url"> Student&#123;name='张三', id='001'&#125;</span></span><br><span class="line">[<span class="link_reference">正在修改</span>]:<span class="link_url"> Student&#123;name='张三', id='001'&#125;</span></span><br><span class="line">[<span class="link_reference">修改后</span>]:<span class="link_url"> Student&#123;name='张三', id='001'&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="一段话解析">一段话解析</h2><p><font size="4"><br>其实是Java中很基础的知识点,所以说,基础很重要.</font></p>
<blockquote>
<p>方法传递参数时,对于基本类型的变量,传递的是变量的值的副本;对于引用类型的变量,传递的是地址的值的副本(所以说Java中都是<code>值传递</code>啊).</p>
</blockquote>
<p>对于上述例子,modifyInfo方法内部,只是将student地址的副本指向了新的地址,真正的student(即方法外部的)的地址并未发生改变,从而原地址指向的内容也不会改变.所以,输出的结果都不会变啊啊啊啊啊啊啊啊啊啊…</p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :-)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;font size=4&gt;&lt;br&gt;本文讲述的是Java中参数传递相关的一些知识点.&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://blog.54yongf.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://blog.54yongf.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>No55-【原】-激活代码提示,让WebStorm助力你一码平川</title>
    <link href="http://blog.54yongf.com/%E6%9D%82%E8%B0%88/55.html"/>
    <id>http://blog.54yongf.com/杂谈/55.html</id>
    <published>2016-05-15T14:04:13.000Z</published>
    <updated>2016-08-15T22:29:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p><font size="4"></font></p>
<blockquote>
<p>最近开始学习NodeJS + MongoDB, 不过WebStorm默认只对NodeJS有较好的代码提示功能,至于MongoDB的驱动… 于是问题就来了,代码写得好累,不过,今天终于找到了较好的解决方案.</p>
</blockquote>
<h2 id="进行一些设置就OK了">进行一些设置就OK了</h2><p><font size="4"><br>File –&gt; Setting –&gt; Languages &amp; Frameworks –&gt; JavaScript –&gt; Libraries. 请看下图:</font></p>
<p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No55-screenshot.png" alt="screenshot"></p>
<p>不用解释了吧.多说两句:</p>
<ol>
<li>这个几乎可以解决一切的代码提示问题.</li>
<li>可以自由定制,也可以使用官方的</li>
<li>Add 是添加自己的</li>
<li>Download是添加官方的支持库,可以用于代码提示,这里有几百个JS库|框架</li>
<li>可以设置Scope,即提示生效的范围(也可以在文件中右键编辑)</li>
<li>我说这么多,你不妨试一下?</li>
<li>以上.</li>
</ol>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :-)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;/font&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最近开始学习NodeJS + MongoDB, 不过WebStorm默认只对NodeJS有较好的代码提示功能,至于MongoDB的驱动… 于是问题就来
    
    </summary>
    
      <category term="杂谈" scheme="http://blog.54yongf.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="杂谈" scheme="http://blog.54yongf.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>No54-【原】-打造不一样的ViewPager</title>
    <link href="http://blog.54yongf.com/Android%E5%BC%80%E5%8F%91/54.html"/>
    <id>http://blog.54yongf.com/Android开发/54.html</id>
    <published>2016-05-10T12:25:43.000Z</published>
    <updated>2016-08-17T22:33:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p><font size="4"><br>好久没写文章了,想我否?开个玩笑,说正经的,最近学业甚忙,时间好紧…</font></p>
<p>今天我们来谈谈ViewPager,关于ViewPager的基础知识就不说了,相信大家都知道,主要谈谈ViewPager的View切换的动画效果,打造不一样的ViewPager.如果你使用小米手机,也许你就知道小米手机长按菜单键就会出现<code>屏幕切换</code>的选项,里面有多达8种桌面切换的特效.没错,今天就是要实现这种效果.</p>
<h2 id="从何下手">从何下手</h2><p><font size="4"><br>我们都知道,大部分ViewPager都是普通的左右切换,这是默认的效果.但是如何加入不一样的动效呢?如果你去查看ViewPager的API,你会发现<code>setPageTransformer</code>这个方法,这个方法是干嘛的呢?看命名就知道了,大概就是设置页面的切换效果.其实,官方早就给出了关于ViewPagerTransformer的两个样例,可以使ViewPager的切换更炫酷,分别是<code>DepthPageTransformer</code>和<code>ZoomOutPageTransformer</code>.</font></p>
<h2 id="DepthPageTransformer">DepthPageTransformer</h2><p><font size="4"><br>代码如下:</font></p>
<p>显示效果如下:</p>
<h2 id="ZoomOutPageTransformer">ZoomOutPageTransformer</h2><p><font size="4"><br>代码如下:</font></p>
<p>显示效果如下:</p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :-)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;font size=&quot;4&quot;&gt;&lt;br&gt;好久没写文章了,想我否?开个玩笑,说正经的,最近学业甚忙,时间好紧…&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;今天我们来谈谈ViewPager,关于ViewPager的基础知识就不说了,相信大家都知道,主要谈谈
    
    </summary>
    
      <category term="Android开发" scheme="http://blog.54yongf.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android开发" scheme="http://blog.54yongf.com/tags/Android%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>No53-【原】-5月乐报</title>
    <link href="http://blog.54yongf.com/%E4%B9%90%E6%8A%A5/53.html"/>
    <id>http://blog.54yongf.com/乐报/53.html</id>
    <published>2016-05-10T11:45:21.000Z</published>
    <updated>2016-08-17T22:34:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Lover">Lover</h2><p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No53-%E5%A4%A7%E5%9C%A3%E5%BD%92%E6%9D%A5.jpg" alt=""></p>
<a id="more"></a>
<h2 id="南方姑娘_-_赵雷">南方姑娘 - 赵雷</h2><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="660" height="86" src="http://music.163.com/outchain/player?type=2&id=202373&auto=0&height=66"></iframe></p>
<h2 id="老男孩_-_筷子兄弟">老男孩 - 筷子兄弟</h2><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="660" height="86" src="http://music.163.com/outchain/player?type=2&id=362998&auto=0&height=66"></iframe></p>
<h2 id="夏洛特烦恼_-_金志文">夏洛特烦恼 - 金志文</h2><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="660" height="86" src="http://music.163.com/outchain/player?type=2&id=34916642&auto=0&height=66"></iframe></p>
<h2 id="牵丝戏_-_银临/Aki阿杰">牵丝戏 - 银临/Aki阿杰</h2><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="660" height="86" src="http://music.163.com/outchain/player?type=2&id=30352891&auto=0&height=66"></iframe></p>
<h2 id="青花瓷_-_周杰伦">青花瓷 - 周杰伦</h2><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="660" height="86" src="http://music.163.com/outchain/player?type=2&id=185811&auto=0&height=66"></iframe></p>
<h2 id="感谢">感谢</h2><p><font size="4"><br>乐报,不定期更新,歌慌了?来乐报 :-)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Lover&quot;&gt;Lover&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xo5vs.com1.z0.glb.clouddn.com/No53-%E5%A4%A7%E5%9C%A3%E5%BD%92%E6%9D%A5.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="乐报" scheme="http://blog.54yongf.com/categories/%E4%B9%90%E6%8A%A5/"/>
    
    
      <category term="乐报" scheme="http://blog.54yongf.com/tags/%E4%B9%90%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>No52-【原】-Android开发常见问题汇总</title>
    <link href="http://blog.54yongf.com/Android%E5%BC%80%E5%8F%91/52.html"/>
    <id>http://blog.54yongf.com/Android开发/52.html</id>
    <published>2016-04-29T16:09:33.000Z</published>
    <updated>2016-08-17T22:35:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p><font size="4"><br>在Android开发中,有各种各样的坑,本文为一些问题提供一些解决思路.</font></p>
<a id="more"></a>
<h2 id="Android_Studio的不支持HttpClient的问题">Android Studio的不支持HttpClient的问题</h2><p><font size="4"><br>在Android高版本中,移除了对HttpClient的支持,如果项目中使用之,会报错,解决方法有二:</font></p>
<ol>
<li><p>添加legacy支持,在build.gradle中添加,</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">android</span> &#123;</span><br><span class="line">    <span class="title">useLibrary</span> <span class="string">'org.apache.http.legacy'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>将项目的SDK降到API21或者以下.</p>
</li>
</ol>
<h2 id="关于Android的滑屏问题,scrollTo()和scrollBy()的纠结">关于Android的滑屏问题,scrollTo()和scrollBy()的纠结</h2><p><font size="4"><br>相信很多童鞋和我一样,都曾经被这个问题搞得焦头烂额,不懂啊,也一定看过很多的文章,但是越看越糊涂,因为信息太爆炸,互联网的信息真真假假,对对错错,有很多错误的观点一直在误导我们,所以尽量看一些大V写的文章比较好.扯远了,快回来.</font></p>
<p>关于滑屏问题,我觉得比较好的是:</p>
<ol>
<li><a href="http://blog.csdn.net/qinjuning/article/details/7247126" title="关于Android的滑屏问题" target="_blank" rel="external"> Android中滑屏初探 —- scrollTo 以及 scrollBy方法使用说明</a></li>
</ol>
<p>下面说一下我的一些见解,如有问题,请留言:</p>
<ol>
<li>Android View视图是没有边界的，Canvas是没有边界的,你看不到只是因为他没有绘制出来,但是客观上是存在的.所谓不因你的存在而存在.</li>
<li>一个视图的在屏幕的起始坐标位于视图坐标起始处.</li>
<li>自始自终,View的位置是不会变化的,即scrollTo和scrollBy不会改变View的位置,改变的只是View上面绘制的内容也就是画布一直在变,而我们知道,画布是没有边界的.</li>
<li>当前视图内容指的是当前时刻绘制在当前坐标处的内容.</li>
<li>关于scrollTo<figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">说明：在当前视图内容偏移至<span class="comment">(x , y)</span>坐标处，即显示<span class="comment">(可视)</span>区域位于<span class="comment">(x , y)</span>坐标处。</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>在理解的时候,可以以视图原点(不是屏幕的左上角!)为参考点.以scrollTo(0, 100)为例,调用这个方法之后,View是不动的,动的是View原点处显示的内容,也就是移动画布,这里应该是显示画布(0, 100)处的内容,需要注意的是,画布的原点和View的原点是一样的,不过画布的原点在变化(因为画布在移动),可以参考下图,scrollTo(0, 100)的实际效果就是将画布上移,相当于隐藏了一部分内容<br><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No52-Android%E4%B8%AD%E6%BB%91%E5%B1%8F%E9%97%AE%E9%A2%98.png" alt="图片说明"><br>6.关于scrollBy<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">说明：在当前视图内容继续偏移<span class="comment">(x , y)</span>个单位，显示<span class="comment">(可视)</span>区域也跟着偏移<span class="comment">(x,y)</span>个单位。</span><br></pre></td></tr></table></figure></p>
<p>只要理解了scrollTo,这个应当也不难理解,这是相对移动,而不是scrollTo的绝对移动,一点差别而已.</p>
<h2 id="关于SQLiteOpenHelper这个辅助类">关于SQLiteOpenHelper这个辅助类</h2><p><font size="4"><br>getReadableDatabase()和 getWriteableDatabase()都可以得到一个可既可以读又可以写的数据库对象，不同的是，当磁盘空间满了之后， getReadableDatabase()得到的是一个只读的对象，而 getWriteableDatabase()则会抛出异常。</font></p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :-)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;font size=4&gt;&lt;br&gt;在Android开发中,有各种各样的坑,本文为一些问题提供一些解决思路.&lt;/p&gt;
    
    </summary>
    
      <category term="Android开发" scheme="http://blog.54yongf.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android开发" scheme="http://blog.54yongf.com/tags/Android%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>No51-【原】-用实例理解HashSet</title>
    <link href="http://blog.54yongf.com/Java/51.html"/>
    <id>http://blog.54yongf.com/Java/51.html</id>
    <published>2016-04-28T06:37:22.000Z</published>
    <updated>2016-08-17T22:36:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p><font size="4"><br>众所周知,HashSet中不含有重复的元素.本文用几个例子来加深对不重复的理解.</font></p>
<a id="more"></a>
<h2 id="一个奇怪的问题">一个奇怪的问题</h2><p><font size="4"><br>先来看一段代码,代码如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yongf.algorithm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by yongf on 16-4-28.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UnderstandingHashSet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HashSet&lt;Person&gt; hs = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        Person person = <span class="keyword">new</span> Person(<span class="string">"Scott Wang"</span>, <span class="number">20</span>);</span><br><span class="line">        hs.add(person);</span><br><span class="line"></span><br><span class="line">        person.setName(<span class="string">"王用"</span>);</span><br><span class="line">        person.setAge(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">        hs.add(person);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"hs = "</span> + hs);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Person&#123;"</span> +</span><br><span class="line">                <span class="string">"name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", age="</span> + age +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></font></p>
<p>运行结果为:<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="setting">hs = <span class="value">[Person&#123;name=<span class="string">'王用'</span>, age=<span class="number">21</span>&#125;]</span></span></span><br></pre></td></tr></table></figure></p>
<p>看到这里,你可能就疑问了,唉,怎么只有一个元素,不是add了两个元素么?一个是(“Scott Wang”, 20),一个是(“王用”, 20),这输出不对吧.</p>
<p>其实你这么分析,好像挺对,不过你忽视了一个东西,判断是否重复基于hashCode(),而在上述代码中,Person类根本就没有重写hashCode()方法,所以,HashSet<person>在比较元素的时候根本就没有考虑name和age属性,因为继承的是Object类的hashCode()方法,所以只会比较对象,只要是同一个对象,在不重写hashCode()方法的情况下,都被认为是同一个对象.</person></p>
<p>好吧,那我们重写hashCode()方法,代码如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yongf.algorithm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by yongf on 16-4-28.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UnderstandingHashSet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HashSet&lt;Person&gt; hs = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        Person person = <span class="keyword">new</span> Person(<span class="string">"Scott Wang"</span>, <span class="number">20</span>);</span><br><span class="line">        hs.add(person);</span><br><span class="line"></span><br><span class="line">        person.setName(<span class="string">"王用"</span>);</span><br><span class="line">        person.setAge(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">        hs.add(person);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"hs = "</span> + hs);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Person&#123;"</span> +</span><br><span class="line">                <span class="string">"name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", age="</span> + age +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name.hashCode() + age * <span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>现在hashCode()方法与name,age属性挂钩上了,在此运行,结果如下:<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hs = [Person&#123;name=<span class="string">'王用'</span>, age=<span class="number">20</span>&#125;, Person&#123;name=<span class="string">'王用'</span>, age=<span class="number">20</span>&#125;]</span><br></pre></td></tr></table></figure></p>
<p>不过,这里的结果还是两个一样的,我的想法如下图所示:</p>
<p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No51-HashSet.png" alt="我的理解,欢迎指正"></p>
<p>不过,如果创建一个新的person1 = new Person(“Scott Wang”, 20),然后hs.add(person1),结果如下:<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hs = [Person&#123;name=<span class="string">'Scott Wang'</span>, age=<span class="number">20</span>&#125;, Person&#123;name=<span class="string">'Scott Wang'</span>, age=<span class="number">20</span>&#125;]</span><br></pre></td></tr></table></figure></p>
<p>这显然也是不符合我们预期的,如果name和age都一样,我们预期两者是不同的,为此,我们需要重写equals方法,因为HashSet的判重涉及到了hashCode(), equals()方法, 于是,经过我们的两次修正,最后的代码如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yongf.algorithm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by yongf on 16-4-28.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UnderstandingHashSet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HashSet&lt;Person&gt; hs = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        Person person = <span class="keyword">new</span> Person(<span class="string">"Scott Wang"</span>, <span class="number">20</span>);</span><br><span class="line">        hs.add(person);</span><br><span class="line"></span><br><span class="line">        Person person1 = <span class="keyword">new</span> Person(<span class="string">"Scott Wang"</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">        hs.add(person1);</span><br><span class="line"></span><br><span class="line">        hs.add(<span class="keyword">new</span> Person(<span class="string">"老码"</span>, <span class="number">20</span>));</span><br><span class="line">        hs.add(<span class="keyword">new</span> Person(<span class="string">"王用"</span>, <span class="number">20</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"hs = "</span> + hs);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Person&#123;"</span> +</span><br><span class="line">                <span class="string">"name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", age="</span> + age +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name.hashCode() + age * <span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> Person) &#123;</span><br><span class="line">            Person person = (Person) obj;</span><br><span class="line">            <span class="keyword">return</span> person.name.equals(name) &amp;&amp; (person.age == age);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>最后的运行结果为:<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hs = [Person&#123;name=<span class="string">'王用'</span>, age=<span class="number">20</span>&#125;, Person&#123;name=<span class="string">'Scott Wang'</span>, age=<span class="number">20</span>&#125;, Person&#123;name=<span class="string">'老码'</span>, age=<span class="number">20</span>&#125;]</span><br></pre></td></tr></table></figure></p>
<p>OK,这个结果在预料之中.那么,我们下次再见 =_=</p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :-)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;font size=4&gt;&lt;br&gt;众所周知,HashSet中不含有重复的元素.本文用几个例子来加深对不重复的理解.&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://blog.54yongf.com/categories/Java/"/>
    
    
      <category term="HashSet" scheme="http://blog.54yongf.com/tags/HashSet/"/>
    
      <category term="Java" scheme="http://blog.54yongf.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>No50-原-Ubuntu下录制GIF的最佳解决方案</title>
    <link href="http://blog.54yongf.com/%E6%9D%82%E8%B0%88/50.html"/>
    <id>http://blog.54yongf.com/杂谈/50.html</id>
    <published>2016-04-27T12:34:49.000Z</published>
    <updated>2016-04-28T12:39:49.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p><font size="4"><br>看到这个标题,你可能会想,估计又是个标题党,好吧,我承认,又装了.但是我保证,绝对不坑,挺好用的.我使用的是Ubuntu Kylin 14.04 LTS</font></p>
<p>但是,可能需要翻墙(我不确定,因为使用Ubuntu的时候我一直在墙外 :-)</p>
<p>需要使用的软件:</p>
<ul>
<li>Kazam(用于屏幕录制,在软件商店里有)</li>
</ul>
<a id="more"></a>
<h2 id="Kazam">Kazam</h2><p><font size="4"><br>先说说Kazam,这是一个屏幕录制软件+截图软件,特性如下:</font></p>
<ol>
<li>屏幕录制: 支持全屏录制,选择区域录制,窗口录制,支持录制鼠标,录制电脑声音,录制麦克风声音.支持延时录制</li>
<li>截图:支持全屏截图,选择区域截图,窗口截图,支持延时录制</li>
<li>屏幕录制生成的是mp4格式的视频</li>
</ol>
<h2 id="Video_to_GIF_Animation_Converter">Video to GIF Animation Converter</h2><p><font size="4"><br>用浏览器打开这个网址: <a href="http://videotogif.thetimetube.com/" target="_blank" rel="external">http://videotogif.thetimetube.com/</a> , 之前已经说过,可能需要翻墙,所以,你懂得…</font></p>
<p>这是一个网页, 特性如下:</p>
<ol>
<li>支持从Google Drive获取视频进行GIF转换</li>
<li>支持从本机选择视频进行GIF转换</li>
<li>支持的视频格式有: webm, mp4, m4v, ogv, mkv等等,可以在此页面直接进行播放,即转换前进行预览</li>
<li>支持从整个视频的某个时间点开始录制GIF</li>
<li>可以设置生成的GIF的宽度(30 - 900)</li>
<li>可以设置从源视频捕获多少帧生成GIF</li>
<li>可以设置捕获帧的间隔</li>
<li>生成的GIF可以直接保存到Google</li>
<li>捕获帧之后,你可以将某些帧删除</li>
</ol>
<p>嗯,差不多就这样.你可以亲自试试.</p>
<h2 id="最后">最后</h2><p><font size="4"><br>由于是在网页端进行操作,所以需要联网,对网速有一定要求,可能需要翻墙.还有一点,视频不要太大了,否则可能得不到想要的效果(这种需求应该不会有吧 -_- | )….</font></p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;font size=4&gt;&lt;br&gt;看到这个标题,你可能会想,估计又是个标题党,好吧,我承认,又装了.但是我保证,绝对不坑,挺好用的.我使用的是Ubuntu Kylin 14.04 LTS&lt;/p&gt;
&lt;p&gt;但是,可能需要翻墙(我不确定,因为使用Ubuntu的时候我一直在墙外 :-)&lt;/p&gt;
&lt;p&gt;需要使用的软件:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kazam(用于屏幕录制,在软件商店里有)&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://blog.54yongf.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="杂谈" scheme="http://blog.54yongf.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>No49-【原】-4月乐报</title>
    <link href="http://blog.54yongf.com/%E4%B9%90%E6%8A%A5/49.html"/>
    <id>http://blog.54yongf.com/乐报/49.html</id>
    <published>2016-04-22T10:04:29.000Z</published>
    <updated>2016-08-17T22:36:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Light">Light</h2><p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No49-3.jpg" alt="石兰"></p>
<a id="more"></a>
<h2 id="Are_You_OK_-_雷军">Are You OK - 雷军</h2><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="660" height="86" src="http://music.163.com/outchain/player?type=2&id=31814005&auto=0&height=66"></iframe></p>
<h2 id="Luv_Letter_-_DJ_OKAWARI">Luv Letter - DJ OKAWARI</h2><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="660" height="86" src="http://music.163.com/outchain/player?type=2&id=30780433&auto=0&height=66"></iframe></p>
<h2 id="Rags_To_Rings_-_Danny_Mc_Carthy">Rags To Rings - Danny Mc Carthy</h2><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="660" height="86" src="http://music.163.com/outchain/player?type=2&id=28949412&auto=0&height=66"></iframe></p>
<h2 id="Chain_Hang_Low_-_Jibbs">Chain Hang Low - Jibbs</h2><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="660" height="86" src="http://music.163.com/outchain/player?type=2&id=18803411&auto=0&height=66"></iframe></p>
<h2 id="Trip_-_Axero">Trip - Axero</h2><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="660" height="86" src="http://music.163.com/outchain/player?type=2&id=36492599&auto=0&height=66"></iframe></p>
<h2 id="感谢">感谢</h2><p><font size="4"><br>乐报,不定期更新,歌慌了?来乐报 :)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Light&quot;&gt;Light&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xo5vs.com1.z0.glb.clouddn.com/No49-3.jpg&quot; alt=&quot;石兰&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="乐报" scheme="http://blog.54yongf.com/categories/%E4%B9%90%E6%8A%A5/"/>
    
    
      <category term="乐报" scheme="http://blog.54yongf.com/tags/%E4%B9%90%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>No48-【原】-自定义View之自定义圆形进度条</title>
    <link href="http://blog.54yongf.com/Android%E5%BC%80%E5%8F%91/48.html"/>
    <id>http://blog.54yongf.com/Android开发/48.html</id>
    <published>2016-04-21T04:41:44.000Z</published>
    <updated>2016-08-17T22:37:05.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p><font size="4"><br>自定义View有多种实现类型,分别为继承自View完全自定义,继承自现有控件(如ImageView)实现特定效果,继承自ViewGroup实现布局类.这里面涉及到View的测量和布局,View的绘制,处理触摸事件,动画等.</font></p>
<a id="more"></a>
<p>这次实现自定义圆形进度条,我使用的是继承LinearLayout的方式.最终的实现效果如下:</p>
<p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No48-1.png" alt="图片1"></p>
<p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No48-2.png" alt="图片2"></p>
<p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No48-3.png" alt="图片3"></p>
<!--more-->
<h2 id="我的想法">我的想法</h2><p><font size="4"><br>要实现这个简单的效果,我的想法是,将circle_progress_view作为背景,进度条用Paint画一条弧实现,作为子组件.只要当前进度发生变化,就进行重绘.</font></p>
<p>circle_progress_view.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"70dp"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"70dp"</span></span><br><span class="line">    <span class="attribute">android:layout_alignParentRight</span>=<span class="value">"true"</span></span><br><span class="line">    <span class="attribute">android:gravity</span>=<span class="value">"center"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/cpv_iv_icon"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"32dp"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"32dp"</span></span><br><span class="line">        <span class="attribute">android:src</span>=<span class="value">"@drawable/ic_download"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/cpv_tv_des"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_marginTop</span>=<span class="value">"5dp"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"下载"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="关于onDraw和dispatchDraw">关于onDraw和dispatchDraw</h2><p><font size="4"><br>绘制View本身的内容,调用View.onDraw方法;绘制自己的孩子,则通过dispatchDraw来实现.</font></p>
<p>View组件的绘制先是调用draw方法绘制背景,在画完背景之后,draw方法会调用onDraw,然后是调用dispatchDraw方法,分发子组件的绘制.</p>
<p>上面有提到,将circle_progress_view作为背景,将弧形进度条作为子组件,所以只要在dispatchDraw方法中加入对弧形进度条的绘制就行了,很简单!</p>
<h2 id="CircleProgressView-java">CircleProgressView.java</h2><p><font size="4"><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line"> * Copyright (C) 1996-2016 YONGF Inc.All Rights Reserved.</span><br><span class="line"> * Scott Wang blog.54yongf.com | blog.csdn.net/yongf2014</span><br><span class="line"> * 文件名: CircleProgressView</span><br><span class="line"> * 描述:</span><br><span class="line"> * 修改历史:</span><br><span class="line"> * 版本号    作者                日期              简要介绍相关操作</span><br><span class="line"> *  1.0         Scott Wang     16-4-21       新增：Create</span><br><span class="line"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.yongf.circleprogressview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Paint;</span><br><span class="line"><span class="keyword">import</span> android.graphics.RectF;</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"><span class="keyword">import</span> android.widget.LinearLayout;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * $&#123;description&#125;</span><br><span class="line"> *</span><br><span class="line"> * <span class="doctag">@author</span> Scott Wang</span><br><span class="line"> * <span class="doctag">@version</span> 1.0, 16-4-21</span><br><span class="line"> * <span class="doctag">@see</span></span><br><span class="line"> * <span class="doctag">@since</span> 1.0</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CircleProgressView</span> <span class="keyword">extends</span> <span class="title">LinearLayout</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ImageView mIcon;</span><br><span class="line">    <span class="keyword">private</span> TextView mDesc;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mProgressEnable = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> mMax = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> mProgress;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CircleProgressView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CircleProgressView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, attrs, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CircleProgressView</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line"></span><br><span class="line">        View view = View.inflate(context, R.layout.circle_progress_view, <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        mIcon = (ImageView) view.findViewById(R.id.cpv_iv_icon);</span><br><span class="line">        mDesc = (TextView) view.findViewById(R.id.cpv_tv_des);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 设置进度条的背景图片</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> resId</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIcon</span><span class="params">(<span class="keyword">int</span> resId)</span> </span>&#123;</span><br><span class="line">        mIcon.setImageResource(resId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 设置自定义进度条的提示文字</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> desc</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDesc</span><span class="params">(String desc)</span> </span>&#123;</span><br><span class="line">        mDesc.setText(desc);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 设置开启进度条的显示,默认关闭</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> progressEnable</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProgressEnable</span><span class="params">(<span class="keyword">boolean</span> progressEnable)</span> </span>&#123;</span><br><span class="line">        mProgressEnable = progressEnable;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 设置最大进度值,默认为100</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> max</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMax</span><span class="params">(<span class="keyword">long</span> max)</span> </span>&#123;</span><br><span class="line">        mMax = max;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 设置当前进度</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> progress</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProgress</span><span class="params">(<span class="keyword">long</span> progress)</span> </span>&#123;</span><br><span class="line">        mProgress = progress;</span><br><span class="line"></span><br><span class="line">        invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">dispatchDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.dispatchDraw(canvas);             <span class="comment">//绘制背景</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mProgressEnable) &#123;</span><br><span class="line">            RectF oval = <span class="keyword">new</span> RectF(mIcon.getLeft(), mIcon.getTop(), mIcon.getRight(), mIcon.getBottom());                   <span class="comment">//以背景图片为基础画一个矩形</span></span><br><span class="line">            <span class="keyword">float</span> startAngle = -<span class="number">90</span>;             <span class="comment">//-90相当于就是"正北"</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">float</span> sweepAngle = mProgress * <span class="number">360</span>.f / mMax;            <span class="comment">//旋转的角度</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">boolean</span> useCenter = <span class="keyword">false</span>;          <span class="comment">//是否保留两边的半径</span></span><br><span class="line"></span><br><span class="line">            Paint paint = <span class="keyword">new</span> Paint();</span><br><span class="line">            paint.setColor(Color.BLUE);                 <span class="comment">//蓝色的画笔</span></span><br><span class="line">            paint.setStyle(Paint.Style.STROKE);</span><br><span class="line">            paint.setStrokeWidth(<span class="number">5</span>);                <span class="comment">//设置画笔的粗细,也就是进度条的粗细</span></span><br><span class="line">            paint.setAntiAlias(<span class="keyword">true</span>);           <span class="comment">//消除锯齿</span></span><br><span class="line">            <span class="comment">// 开始画一条弧,表示进度</span></span><br><span class="line">            canvas.drawArc(oval, startAngle, sweepAngle, useCenter, paint);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></font></p>
<h2 id="activity_main-xml">activity_main.xml</h2><p><font size="4"><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">RelativeLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:paddingBottom</span>=<span class="value">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    <span class="attribute">android:paddingLeft</span>=<span class="value">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    <span class="attribute">android:paddingRight</span>=<span class="value">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    <span class="attribute">android:paddingTop</span>=<span class="value">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    <span class="attribute">tools:context</span>=<span class="value">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">com.yongf.circleprogressview.CircleProgressView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/cpv"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">" "</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></font></p>
<h2 id="MainActivity-java">MainActivity.java</h2><p><font size="4"><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yongf.circleprogressview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.AsyncTask;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.SystemClock;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> CircleProgressView cpv = (CircleProgressView) findViewById(R.id.cpv);</span><br><span class="line">        cpv.setDesc(<span class="string">"下载"</span>);</span><br><span class="line">        cpv.setIcon(R.drawable.ic_pause);</span><br><span class="line"></span><br><span class="line">        cpv.setProgressEnable(<span class="keyword">true</span>);</span><br><span class="line">        cpv.setMax(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">        cpv.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">new</span> AsyncTask&lt;Void, Integer, Void&gt;() &#123;</span><br><span class="line">                    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="annotation">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">protected</span> Void <span class="title">doInBackground</span><span class="params">(Void... params)</span> </span>&#123;</span><br><span class="line">                        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                            publishProgress(i);</span><br><span class="line">                            SystemClock.sleep(<span class="number">100</span>);</span><br><span class="line">                            <span class="keyword">if</span> (i &gt;= <span class="number">100</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            i++;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="annotation">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onProgressUpdate</span><span class="params">(Integer... values)</span> </span>&#123;</span><br><span class="line">                        Integer value = values[<span class="number">0</span>];</span><br><span class="line">                        cpv.setProgress(i);</span><br><span class="line">                        cpv.setDesc(i + <span class="string">"%"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;.execute();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></font></p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;font size=4&gt;&lt;br&gt;自定义View有多种实现类型,分别为继承自View完全自定义,继承自现有控件(如ImageView)实现特定效果,继承自ViewGroup实现布局类.这里面涉及到View的测量和布局,View的绘制,处理触摸事件,动画等.&lt;/p&gt;
    
    </summary>
    
      <category term="Android开发" scheme="http://blog.54yongf.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android开发" scheme="http://blog.54yongf.com/tags/Android%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>No47-【原】-Git repository corrupt(incorrect header check; loose object is corrupt</title>
    <link href="http://blog.54yongf.com/Git/47.html"/>
    <id>http://blog.54yongf.com/Git/47.html</id>
    <published>2016-04-17T04:42:36.000Z</published>
    <updated>2016-08-17T22:37:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述">问题描述</h2><p><font size="4"><br>今天Coding完之后，正准备commit代码，结果报了个错，从没见过：</font></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">% git <span class="operator"><span class="keyword">commit</span></span><br><span class="line"><span class="keyword">error</span>: inflate: <span class="keyword">data</span> stream <span class="keyword">error</span> (incorrect header <span class="keyword">check</span>)</span><br><span class="line"><span class="keyword">error</span>: unable <span class="keyword">to</span> unpack a94406345ac44982b00cf57b4b9660a35436637f header</span><br><span class="line">fatal: a94406345ac44982b00cf57b4b9660a35436637f <span class="keyword">is</span> <span class="keyword">not</span> a valid <span class="keyword">object</span></span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="开始分析">开始分析</h2><p><font size="4"><br>我一看，是data stream error, 又想到今天刚刚把移动硬盘强行拔掉，导致硬盘部分文件受损的事，我一想，完犊子，估计是git文件出问题了。然而我不懂啊，最后，狠下心，算了，直接先从github上clone昨天的代码，然后慢慢改吧（话说今天改了很多代码，加了很多代码来着）。</font></p>
<h2 id="Clone远程库">Clone远程库</h2><p><font size="4"><br>开始克隆远程库，使用Android Studio，突然，蹦出个错：</font></p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Clone failed Out <span class="keyword">of</span> memory, malloc failed (tried <span class="keyword">to</span> allocate <span class="number">2934353408</span> bytes)</span><br><span class="line"><span class="command">write</span> <span class="keyword">error</span>: Invalid argument</span><br></pre></td></tr></table></figure>
<p>看到这个，我猜到可能是传输数据大小限制问题，详情请查看我<a href="/Git/40.html" title="Git Push出问题">另外一篇博文</a>。解决掉这个问题之后，顺利克隆远程库。</p>
<h2 id="正式解决问题">正式解决问题</h2><p><font size="4"><br>但是，我还是不甘心，我实在是不想在昨天的代码上慢慢改了。于是，开始Google。在StackOverflow上，找到了一个同样的问题，下面有个21个赞的回答，我一想，有救了~&gt;_&lt;~+。没想到竟然真的治好了我，步骤如下：</font></p>
<ol>
<li>进入本地git库，也就是.git文件夹的位置</li>
<li><p>运行<code>git fsck --full</code>，关于这条指令的作用，<a href="http://blog.csdn.net/hudashi/article/details/7668795" title="Git维护" target="_blank" rel="external">请看这里</a>。然后，你可能看到下面这样的</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Checking object directories: 100% (256/256), done.</span><br><span class="line">error: inflate: data stream error (incorrect header <span class="operator"><span class="keyword">check</span>)</span><br><span class="line"><span class="keyword">error</span>: unable <span class="keyword">to</span> unpack <span class="number">86e7247</span>af5865e857a3b61eed99986e2d9538df1 header</span><br><span class="line"><span class="keyword">error</span>: inflate: <span class="keyword">data</span> stream <span class="keyword">error</span> (incorrect header <span class="keyword">check</span>)</span><br><span class="line">fatal: loose <span class="keyword">object</span> <span class="number">86e7247</span>af5865e857a3b61eed99986e2d9538df1 (<span class="keyword">stored</span> <span class="keyword">in</span> .git/objects/<span class="number">86</span>/e7247af5865e857a3b61eed99986e2d9538df1) <span class="keyword">is</span> corrupt</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在执行下面的操作之前，墙裂建议<strong>备份.git/objects文件夹</strong>！</p>
</li>
<li>删除上述文件<code>.git/objects/86/e7247af5865e857a3b61eed99986e2d9538df1</code>，然后再次运行<code>git fsck --full</code></li>
<li><p>重复步骤4，直到<code>git fsck --full</code>的提示信息变成类似下面这样的<br><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No47-git%E5%8F%88%E5%87%BA%E9%97%AE%E9%A2%98%E4%BA%86.png" alt="提醒信息：dangling blob"></p>
</li>
<li><p>我只删了一次文件就OK了，然后重新commit，竟然OK，OMG。不过原帖中答主可是删了5次文件才弄好的。</p>
</li>
</ol>
<h2 id="参考资料">参考资料</h2><p><font size="4"><br><a href="http://stackoverflow.com/questions/23725925/git-repository-corrupt-incorrect-header-check-loose-object-is-corrupt" target="_blank" rel="external">http://stackoverflow.com/questions/23725925/git-repository-corrupt-incorrect-header-check-loose-object-is-corrupt</a></font></p>
<h2 id="总结">总结</h2><p><font size="4"><br>咳咳，简单总结一下。果然是Google大法好，StackOverflow大法好，我在百度搜了好久没找到这个答案，而在Google直接就找到了。果然是百度娱乐，Google学术啊。<br>我的Github：<a href="http://github.com/wangyongf" target="_blank" rel="external">http://github.com/wangyongf</a></font></p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题描述&quot;&gt;问题描述&lt;/h2&gt;&lt;p&gt;&lt;font size=4&gt;&lt;br&gt;今天Coding完之后，正准备commit代码，结果报了个错，从没见过：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;% git &lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;: inflate: &lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt; stream &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt; (incorrect header &lt;span class=&quot;keyword&quot;&gt;check&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;: unable &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; unpack a94406345ac44982b00cf57b4b9660a35436637f header&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fatal: a94406345ac44982b00cf57b4b9660a35436637f &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; a valid &lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Git" scheme="http://blog.54yongf.com/categories/Git/"/>
    
    
      <category term="Git" scheme="http://blog.54yongf.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>No46-【原】-计算机算法设计与分析-三个水杯倒水问题</title>
    <link href="http://blog.54yongf.com/%E7%AE%97%E6%B3%95/46.html"/>
    <id>http://blog.54yongf.com/算法/46.html</id>
    <published>2016-04-15T15:29:02.000Z</published>
    <updated>2016-08-17T22:38:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目来源">题目来源</h2><p><font size="4"><br>南阳理工学院OJ:<a href="http://acm.nyist.net/JudgeOnline/problem.php?pid=21" target="_blank" rel="external">http://acm.nyist.net/JudgeOnline/problem.php?pid=21</a></font></p>
<h2 id="问题描述">问题描述</h2><p><font size="4"><br>给出三个水杯，大小不一，并且只有最大的水杯的水是装满的，其余两个为空杯子。三个水杯之间相互倒水，并且水杯没有标识，只能根据给出的水杯体积来计算。现在要求你写出一个程序，使其输出使初始状态到达目标状态的最少次数。</font></p>
<a id="more"></a>
<h2 id="输入">输入</h2><p><font size="4"><br>输入数据由input.txt给出.<br>测试数据有两行，第一行给出三个整数V1 V2 V3 (V1&gt;V2&gt;V3 V1<100 v3="">0)表示三个水杯的体积。<br>第二行给出三个整数E1 E2 E3 （体积小于等于相应水杯体积）表示我们需要的最终状态</100></font></p>
<h2 id="输出">输出</h2><p><font size="4"><br>输出到文件output.txt中<br>如果能够达到目标状态输出true,达不到输出false</font></p>
<h2 id="样例输入">样例输入</h2><p><font size="4"><br>input.txt<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span> <span class="number">3</span> <span class="number">1</span></span><br><span class="line"><span class="number">4</span> <span class="number">1</span> <span class="number">1</span></span><br></pre></td></tr></table></figure></font></p>
<h2 id="样例输出">样例输出</h2><p><font size="4"><br>output.txt<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">true</span></span><br></pre></td></tr></table></figure></font></p>
<h2 id="C++实现">C++实现</h2><p><font size="4"><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">* @Author: Scott Wang</span><br><span class="line">* @Date:   2016-04-15 21:36:02</span><br><span class="line">* @Last Modified by:   Scott Wang</span><br><span class="line">* @Last Modified time: 2016-04-15 23:08:34</span><br><span class="line">*/</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> Node</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> id;                     <span class="comment">//当前节点在vector中的位置</span></span><br><span class="line">    <span class="keyword">int</span> current[<span class="number">3</span>];         <span class="comment">//当前３个水杯中的水量</span></span><br><span class="line">    <span class="keyword">int</span> step;                   <span class="comment">//已走的步数</span></span><br><span class="line">    <span class="keyword">int</span> father;                 <span class="comment">//标记上一步</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printStep</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output2Terminal</span><span class="params">(<span class="keyword">bool</span> result)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">bool</span> result)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> work[<span class="number">6</span>][<span class="number">2</span>] = &#123;&#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">0</span>, <span class="number">2</span>&#125;, &#123;<span class="number">1</span>, <span class="number">0</span>&#125;, &#123;<span class="number">1</span>, <span class="number">2</span>&#125;, &#123;<span class="number">2</span>, <span class="number">0</span>&#125;, &#123;<span class="number">2</span>, <span class="number">1</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> src[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> des[<span class="number">3</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;Node&gt; v;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> result;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化数据</span></span><br><span class="line">    input();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 进行广度优先遍历</span></span><br><span class="line">    result = bfs();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在控制台输出结果</span></span><br><span class="line">    output2Terminal(result);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出结果到output.txt</span></span><br><span class="line">    output(result);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 初始化杯子的容量和目标水量</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="function">ifstream <span class="title">input</span><span class="params">(<span class="string">"input.txt"</span>, ios::in)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (!input.is_open())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cerr</span> &lt;&lt; <span class="string">"Can't open input.txt"</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">exit</span>(-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    input &gt;&gt; src[<span class="number">0</span>] &gt;&gt; src[<span class="number">1</span>] &gt;&gt; src[<span class="number">2</span>];</span><br><span class="line">    input &gt;&gt; des[<span class="number">0</span>] &gt;&gt; des[<span class="number">1</span>] &gt;&gt; des[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    input.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 进行广度优先遍历</span><br><span class="line"> * @return 判断结果</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> front = <span class="number">0</span>, rear = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">bool</span> foot[<span class="number">100</span>][<span class="number">100</span>][<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    Node temp = &#123;<span class="number">0</span>, &#123;src[<span class="number">0</span>], <span class="number">0</span>, <span class="number">0</span>&#125;, <span class="number">0</span>, -<span class="number">1</span>&#125;;</span><br><span class="line">    foot[temp.current[<span class="number">0</span>]][temp.current[<span class="number">1</span>]][temp.current[<span class="number">2</span>]] = <span class="literal">true</span>;</span><br><span class="line">    v.push_back(temp);</span><br><span class="line">    rear++;</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (front &lt; rear)</span><br><span class="line">    &#123;</span><br><span class="line">        index++;</span><br><span class="line">        temp = v[front++];</span><br><span class="line">        <span class="keyword">if</span> (temp.current[<span class="number">0</span>] == des[<span class="number">0</span>] &amp;&amp;</span><br><span class="line">                temp.current[<span class="number">1</span>] == des[<span class="number">1</span>] &amp;&amp;</span><br><span class="line">                temp.current[<span class="number">2</span>] == des[<span class="number">2</span>] )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            Node temp1 = temp;</span><br><span class="line">            temp1.step++;</span><br><span class="line">            temp1.father = temp.step;</span><br><span class="line">            <span class="keyword">int</span> s = work[i][<span class="number">0</span>], d = work[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> available = src[d] - temp1.current[d];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0</span> == temp1.current[s] || <span class="number">0</span> == available)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (temp1.current[s] &lt;= available)</span><br><span class="line">            &#123;</span><br><span class="line">                temp1.current[d] += temp1.current[s];</span><br><span class="line">                temp1.current[s] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                temp1.current[s] -= available;</span><br><span class="line">                temp1.current[d] = src[d];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!foot[temp1.current[<span class="number">0</span>]][temp1.current[<span class="number">1</span>]][temp1.current[<span class="number">2</span>]])</span><br><span class="line">            &#123;</span><br><span class="line">                temp1.id = v.size() - <span class="number">1</span>;</span><br><span class="line">                v.push_back(temp1);</span><br><span class="line">                rear++;</span><br><span class="line">                foot[temp1.current[<span class="number">0</span>]][temp1.current[<span class="number">1</span>]][temp1.current[<span class="number">2</span>]] = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 输出倒水的步骤</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printStep</span><span class="params">(<span class="keyword">int</span> id)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (id)</span><br><span class="line">    &#123;</span><br><span class="line">        printStep(v[id].father);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; v[id].current[<span class="number">0</span>] &lt;&lt; <span class="string">"\t"</span> &lt;&lt; v[id].current[<span class="number">1</span>] &lt;&lt; <span class="string">"\t"</span> &lt;&lt; v[id].current[<span class="number">2</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 输出结果到控制台</span><br><span class="line"> * @param result 结果</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output2Terminal</span><span class="params">(<span class="keyword">bool</span> result)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (result)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"共需"</span> &lt;&lt; v.back().step &lt;&lt; <span class="string">"次"</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"步骤为："</span> &lt;&lt; endl;</span><br><span class="line">        printStep(v.size() - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"此题无解"</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 返回结果 - 是否找到满足条件的倒法</span><br><span class="line"> * @param result 结果 true or false</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">bool</span> result)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="function">ofstream <span class="title">output</span><span class="params">(<span class="string">"output.txt"</span>, ios::out)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (!output.is_open())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cerr</span> &lt;&lt; <span class="string">"Can't open output.txt"</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">exit</span>(-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    output &lt;&lt; (result ? <span class="string">"true"</span> : <span class="string">"false"</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    output.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></font></p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目来源&quot;&gt;题目来源&lt;/h2&gt;&lt;p&gt;&lt;font size=4&gt;&lt;br&gt;南阳理工学院OJ:&lt;a href=&quot;http://acm.nyist.net/JudgeOnline/problem.php?pid=21&quot;&gt;http://acm.nyist.net/JudgeOnline/problem.php?pid=21&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;问题描述&quot;&gt;问题描述&lt;/h2&gt;&lt;p&gt;&lt;font size=4&gt;&lt;br&gt;给出三个水杯，大小不一，并且只有最大的水杯的水是装满的，其余两个为空杯子。三个水杯之间相互倒水，并且水杯没有标识，只能根据给出的水杯体积来计算。现在要求你写出一个程序，使其输出使初始状态到达目标状态的最少次数。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://blog.54yongf.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://blog.54yongf.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
