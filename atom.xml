<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Scott Wang's blog]]></title>
  <subtitle><![CDATA[越努力，越幸运]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.54yongf.com/"/>
  <updated>2016-04-29T16:09:33.000Z</updated>
  <id>http://blog.54yongf.com/</id>
  
  <author>
    <name><![CDATA[隔壁老王]]></name>
    <email><![CDATA[1059613472@qq.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[No52-原-Android开发常见问题汇总]]></title>
    <link href="http://blog.54yongf.com/Android%E5%BC%80%E5%8F%91/52.html"/>
    <id>http://blog.54yongf.com/Android开发/52.html</id>
    <published>2016-04-29T16:09:33.000Z</published>
    <updated>2016-04-29T16:09:33.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p><font size="4"><br>在Android开发中,有各种各样的坑,本文为一些问题提供解决思路.</font></p>
<h2 id="Android_Studio的不支持HttpClient的问题">Android Studio的不支持HttpClient的问题</h2><p><font size="4"><br>在Android高版本中,移除了对HttpClient的支持,如果项目中使用之,会报错,解决方法有二:</font></p>
<ol>
<li><p>添加legacy支持,在build.gradle中添加,</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">android</span> &#123;</span><br><span class="line">    <span class="title">useLibrary</span> <span class="string">'org.apache.http.legacy'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>将项目的SDK降到API21或者以下.</p>
</li>
</ol>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :-)</font></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><p><font size="4"><br>在Android开发中,有各种各样的坑,本文为一些问题提供解决思路.</font></p>
<h2 id="Android_Studio的不支持HttpClient的问题">Android Stud]]>
    </summary>
    
      <category term="Android开发" scheme="http://blog.54yongf.com/tags/Android%E5%BC%80%E5%8F%91/"/>
    
      <category term="Android开发" scheme="http://blog.54yongf.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[No51-原-用实例理解HashSet]]></title>
    <link href="http://blog.54yongf.com/Java/51.html"/>
    <id>http://blog.54yongf.com/Java/51.html</id>
    <published>2016-04-28T06:37:22.000Z</published>
    <updated>2016-04-28T12:16:22.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p><font size="4"><br>众所周知,HashSet中不含有重复的元素.本文用几个例子来加深对不重复的理解.</font></p>
<a id="more"></a>
<h2 id="一个奇怪的问题">一个奇怪的问题</h2><p><font size="4"><br>先来看一段代码,代码如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yongf.algorithm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by yongf on 16-4-28.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UnderstandingHashSet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HashSet&lt;Person&gt; hs = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        Person person = <span class="keyword">new</span> Person(<span class="string">"Scott Wang"</span>, <span class="number">20</span>);</span><br><span class="line">        hs.add(person);</span><br><span class="line"></span><br><span class="line">        person.setName(<span class="string">"王用"</span>);</span><br><span class="line">        person.setAge(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">        hs.add(person);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"hs = "</span> + hs);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Person&#123;"</span> +</span><br><span class="line">                <span class="string">"name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", age="</span> + age +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></font></p>
<p>运行结果为:<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="setting">hs = <span class="value">[Person&#123;name=<span class="string">'王用'</span>, age=<span class="number">21</span>&#125;]</span></span></span><br></pre></td></tr></table></figure></p>
<p>看到这里,你可能就疑问了,唉,怎么只有一个元素,不是add了两个元素么?一个是(“Scott Wang”, 20),一个是(“王用”, 20),这输出不对吧.</p>
<p>其实你这么分析,好像挺对,不过你忽视了一个东西,判断是否重复基于hashCode(),而在上述代码中,Person类根本就没有重写hashCode()方法,所以,HashSet<person>在比较元素的时候根本就没有考虑name和age属性,因为继承的是Object类的hashCode()方法,所以只会比较对象,只要是同一个对象,在不重写hashCode()方法的情况下,都被认为是同一个对象.</person></p>
<p>好吧,那我们重写hashCode()方法,代码如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yongf.algorithm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by yongf on 16-4-28.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UnderstandingHashSet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HashSet&lt;Person&gt; hs = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        Person person = <span class="keyword">new</span> Person(<span class="string">"Scott Wang"</span>, <span class="number">20</span>);</span><br><span class="line">        hs.add(person);</span><br><span class="line"></span><br><span class="line">        person.setName(<span class="string">"王用"</span>);</span><br><span class="line">        person.setAge(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">        hs.add(person);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"hs = "</span> + hs);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Person&#123;"</span> +</span><br><span class="line">                <span class="string">"name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", age="</span> + age +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name.hashCode() + age * <span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>现在hashCode()方法与name,age属性挂钩上了,在此运行,结果如下:<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hs = [Person&#123;name=<span class="string">'王用'</span>, age=<span class="number">20</span>&#125;, Person&#123;name=<span class="string">'王用'</span>, age=<span class="number">20</span>&#125;]</span><br></pre></td></tr></table></figure></p>
<p>不过,这里的结果还是两个一样的,我的想法如下图所示:</p>
<p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No51-HashSet.png" alt="我的理解,欢迎指正"></p>
<p>不过,如果创建一个新的person1 = new Person(“Scott Wang”, 20),然后hs.add(person1),结果如下:<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hs = [Person&#123;name=<span class="string">'Scott Wang'</span>, age=<span class="number">20</span>&#125;, Person&#123;name=<span class="string">'Scott Wang'</span>, age=<span class="number">20</span>&#125;]</span><br></pre></td></tr></table></figure></p>
<p>这显然也是不符合我们预期的,如果name和age都一样,我们预期两者是不同的,为此,我们需要重写equals方法,因为HashSet的判重涉及到了hashCode(), equals()方法, 于是,经过我们的两次修正,最后的代码如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yongf.algorithm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by yongf on 16-4-28.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UnderstandingHashSet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HashSet&lt;Person&gt; hs = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        Person person = <span class="keyword">new</span> Person(<span class="string">"Scott Wang"</span>, <span class="number">20</span>);</span><br><span class="line">        hs.add(person);</span><br><span class="line"></span><br><span class="line">        Person person1 = <span class="keyword">new</span> Person(<span class="string">"Scott Wang"</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">        hs.add(person1);</span><br><span class="line"></span><br><span class="line">        hs.add(<span class="keyword">new</span> Person(<span class="string">"老码"</span>, <span class="number">20</span>));</span><br><span class="line">        hs.add(<span class="keyword">new</span> Person(<span class="string">"王用"</span>, <span class="number">20</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"hs = "</span> + hs);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Person&#123;"</span> +</span><br><span class="line">                <span class="string">"name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", age="</span> + age +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name.hashCode() + age * <span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> Person) &#123;</span><br><span class="line">            Person person = (Person) obj;</span><br><span class="line">            <span class="keyword">return</span> person.name.equals(name) &amp;&amp; (person.age == age);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>最后的运行结果为:<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hs = [Person&#123;name=<span class="string">'王用'</span>, age=<span class="number">20</span>&#125;, Person&#123;name=<span class="string">'Scott Wang'</span>, age=<span class="number">20</span>&#125;, Person&#123;name=<span class="string">'老码'</span>, age=<span class="number">20</span>&#125;]</span><br></pre></td></tr></table></figure></p>
<p>OK,这个结果在预料之中.那么,我们下次再见 =_=</p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :-)</font></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><p><font size=4><br>众所周知,HashSet中不含有重复的元素.本文用几个例子来加深对不重复的理解.</p>]]>
    
    </summary>
    
      <category term="HashSet" scheme="http://blog.54yongf.com/tags/HashSet/"/>
    
      <category term="Java" scheme="http://blog.54yongf.com/tags/Java/"/>
    
      <category term="Java" scheme="http://blog.54yongf.com/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[No50-原-Ubuntu下录制GIF的最佳解决方案]]></title>
    <link href="http://blog.54yongf.com/%E6%9D%82%E8%B0%88/50.html"/>
    <id>http://blog.54yongf.com/杂谈/50.html</id>
    <published>2016-04-27T12:34:49.000Z</published>
    <updated>2016-04-28T12:39:49.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p><font size="4"><br>看到这个标题,你可能会想,估计又是个标题党,好吧,我承认,又装了.但是我保证,绝对不坑,挺好用的.我使用的是Ubuntu Kylin 14.04 LTS</font></p>
<p>但是,可能需要翻墙(我不确定,因为使用Ubuntu的时候我一直在墙外 :-)</p>
<p>需要使用的软件:</p>
<ul>
<li>Kazam(用于屏幕录制,在软件商店里有)</li>
</ul>
<a id="more"></a>
<h2 id="Kazam">Kazam</h2><p><font size="4"><br>先说说Kazam,这是一个屏幕录制软件+截图软件,特性如下:</font></p>
<ol>
<li>屏幕录制: 支持全屏录制,选择区域录制,窗口录制,支持录制鼠标,录制电脑声音,录制麦克风声音.支持延时录制</li>
<li>截图:支持全屏截图,选择区域截图,窗口截图,支持延时录制</li>
<li>屏幕录制生成的是mp4格式的视频</li>
</ol>
<h2 id="Video_to_GIF_Animation_Converter">Video to GIF Animation Converter</h2><p><font size="4"><br>用浏览器打开这个网址: <a href="http://videotogif.thetimetube.com/" target="_blank" rel="external">http://videotogif.thetimetube.com/</a> , 之前已经说过,可能需要翻墙,所以,你懂得…</font></p>
<p>这是一个网页, 特性如下:</p>
<ol>
<li>支持从Google Drive获取视频进行GIF转换</li>
<li>支持从本机选择视频进行GIF转换</li>
<li>支持的视频格式有: webm, mp4, m4v, ogv, mkv等等,可以在此页面直接进行播放,即转换前进行预览</li>
<li>支持从整个视频的某个时间点开始录制GIF</li>
<li>可以设置生成的GIF的宽度(30 - 900)</li>
<li>可以设置从源视频捕获多少帧生成GIF</li>
<li>可以设置捕获帧的间隔</li>
<li>生成的GIF可以直接保存到Google</li>
<li>捕获帧之后,你可以将某些帧删除</li>
</ol>
<p>嗯,差不多就这样.你可以亲自试试.</p>
<h2 id="最后">最后</h2><p><font size="4"><br>由于是在网页端进行操作,所以需要联网,对网速有一定要求,可能需要翻墙.还有一点,视频不要太大了,否则可能得不到想要的效果(这种需求应该不会有吧 -_- | )….</font></p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><p><font size=4><br>看到这个标题,你可能会想,估计又是个标题党,好吧,我承认,又装了.但是我保证,绝对不坑,挺好用的.我使用的是Ubuntu Kylin 14.04 LTS</p>
<p>但是,可能需要翻墙(我不确定,因为使用Ubuntu的时候我一直在墙外 :-)</p>
<p>需要使用的软件:</p>
<ul>
<li>Kazam(用于屏幕录制,在软件商店里有)</li>
</ul>]]>
    
    </summary>
    
      <category term="杂谈" scheme="http://blog.54yongf.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="杂谈" scheme="http://blog.54yongf.com/categories/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[No49-原-4月乐报]]></title>
    <link href="http://blog.54yongf.com/%E4%B9%90%E6%8A%A5/49.html"/>
    <id>http://blog.54yongf.com/乐报/49.html</id>
    <published>2016-04-22T10:04:29.000Z</published>
    <updated>2016-04-22T10:04:29.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Light">Light</h2><p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No49-3.jpg" alt="石兰"></p>
<a id="more"></a>
<h2 id="Are_You_OK_-_雷军">Are You OK - 雷军</h2><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="660" height="86" src="http://music.163.com/outchain/player?type=2&id=31814005&auto=0&height=66"></iframe></p>
<h2 id="Luv_Letter_-_DJ_OKAWARI">Luv Letter - DJ OKAWARI</h2><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="660" height="86" src="http://music.163.com/outchain/player?type=2&id=30780433&auto=0&height=66"></iframe></p>
<h2 id="Rags_To_Rings_-_Danny_Mc_Carthy">Rags To Rings - Danny Mc Carthy</h2><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="660" height="86" src="http://music.163.com/outchain/player?type=2&id=28949412&auto=0&height=66"></iframe></p>
<h2 id="Chain_Hang_Low_-_Jibbs">Chain Hang Low - Jibbs</h2><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="660" height="86" src="http://music.163.com/outchain/player?type=2&id=18803411&auto=0&height=66"></iframe></p>
<h2 id="Trip_-_Axero">Trip - Axero</h2><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="660" height="86" src="http://music.163.com/outchain/player?type=2&id=36492599&auto=0&height=66"></iframe></p>
<h2 id="感谢">感谢</h2><p><font size="4"><br>乐报,不定期更新,歌慌了?来乐报 :)</font></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Light">Light</h2><p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No49-3.jpg" alt="石兰"></p>]]>
    
    </summary>
    
      <category term="乐报" scheme="http://blog.54yongf.com/tags/%E4%B9%90%E6%8A%A5/"/>
    
      <category term="乐报" scheme="http://blog.54yongf.com/categories/%E4%B9%90%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[No48-原-自定义View之自定义圆形进度条]]></title>
    <link href="http://blog.54yongf.com/Android%E5%BC%80%E5%8F%91/48.html"/>
    <id>http://blog.54yongf.com/Android开发/48.html</id>
    <published>2016-04-21T04:41:44.000Z</published>
    <updated>2016-04-28T12:40:20.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p><font size="4"><br>自定义View有多种实现类型,分别为继承自View完全自定义,继承自现有控件(如ImageView)实现特定效果,继承自ViewGroup实现布局类.这里面涉及到View的测量和布局,View的绘制,处理触摸事件,动画等.</font></p>
<a id="more"></a>
<p>这次实现自定义圆形进度条,我使用的是继承LinearLayout的方式.最终的实现效果如下:</p>
<p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No48-1.png" alt="图片1"></p>
<p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No48-2.png" alt="图片2"></p>
<p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No48-3.png" alt="图片3"></p>
<!--more-->
<h2 id="我的想法">我的想法</h2><p><font size="4"><br>要实现这个简单的效果,我的想法是,将circle_progress_view作为背景,进度条用Paint画一条弧实现,作为子组件.只要当前进度发生变化,就进行重绘.</font></p>
<p>circle_progress_view.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"70dp"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"70dp"</span></span><br><span class="line">    <span class="attribute">android:layout_alignParentRight</span>=<span class="value">"true"</span></span><br><span class="line">    <span class="attribute">android:gravity</span>=<span class="value">"center"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/cpv_iv_icon"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"32dp"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"32dp"</span></span><br><span class="line">        <span class="attribute">android:src</span>=<span class="value">"@drawable/ic_download"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/cpv_tv_des"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_marginTop</span>=<span class="value">"5dp"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"下载"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="关于onDraw和dispatchDraw">关于onDraw和dispatchDraw</h2><p><font size="4"><br>绘制View本身的内容,调用View.onDraw方法;绘制自己的孩子,则通过dispatchDraw来实现.</font></p>
<p>View组件的绘制先是调用draw方法绘制背景,在画完背景之后,draw方法会调用onDraw,然后是调用dispatchDraw方法,分发子组件的绘制.</p>
<p>上面有提到,将circle_progress_view作为背景,将弧形进度条作为子组件,所以只要在dispatchDraw方法中加入对弧形进度条的绘制就行了,很简单!</p>
<h2 id="CircleProgressView-java">CircleProgressView.java</h2><p><font size="4"><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line"> * Copyright (C) 1996-2016 YONGF Inc.All Rights Reserved.</span><br><span class="line"> * Scott Wang blog.54yongf.com | blog.csdn.net/yongf2014</span><br><span class="line"> * 文件名: CircleProgressView</span><br><span class="line"> * 描述:</span><br><span class="line"> * 修改历史:</span><br><span class="line"> * 版本号    作者                日期              简要介绍相关操作</span><br><span class="line"> *  1.0         Scott Wang     16-4-21       新增：Create</span><br><span class="line"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.yongf.circleprogressview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Paint;</span><br><span class="line"><span class="keyword">import</span> android.graphics.RectF;</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"><span class="keyword">import</span> android.widget.LinearLayout;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * $&#123;description&#125;</span><br><span class="line"> *</span><br><span class="line"> * <span class="doctag">@author</span> Scott Wang</span><br><span class="line"> * <span class="doctag">@version</span> 1.0, 16-4-21</span><br><span class="line"> * <span class="doctag">@see</span></span><br><span class="line"> * <span class="doctag">@since</span> 1.0</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CircleProgressView</span> <span class="keyword">extends</span> <span class="title">LinearLayout</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ImageView mIcon;</span><br><span class="line">    <span class="keyword">private</span> TextView mDesc;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mProgressEnable = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> mMax = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> mProgress;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CircleProgressView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CircleProgressView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, attrs, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CircleProgressView</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line"></span><br><span class="line">        View view = View.inflate(context, R.layout.circle_progress_view, <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        mIcon = (ImageView) view.findViewById(R.id.cpv_iv_icon);</span><br><span class="line">        mDesc = (TextView) view.findViewById(R.id.cpv_tv_des);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 设置进度条的背景图片</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> resId</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIcon</span><span class="params">(<span class="keyword">int</span> resId)</span> </span>&#123;</span><br><span class="line">        mIcon.setImageResource(resId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 设置自定义进度条的提示文字</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> desc</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDesc</span><span class="params">(String desc)</span> </span>&#123;</span><br><span class="line">        mDesc.setText(desc);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 设置开启进度条的显示,默认关闭</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> progressEnable</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProgressEnable</span><span class="params">(<span class="keyword">boolean</span> progressEnable)</span> </span>&#123;</span><br><span class="line">        mProgressEnable = progressEnable;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 设置最大进度值,默认为100</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> max</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMax</span><span class="params">(<span class="keyword">long</span> max)</span> </span>&#123;</span><br><span class="line">        mMax = max;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 设置当前进度</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> progress</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProgress</span><span class="params">(<span class="keyword">long</span> progress)</span> </span>&#123;</span><br><span class="line">        mProgress = progress;</span><br><span class="line"></span><br><span class="line">        invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">dispatchDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.dispatchDraw(canvas);             <span class="comment">//绘制背景</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mProgressEnable) &#123;</span><br><span class="line">            RectF oval = <span class="keyword">new</span> RectF(mIcon.getLeft(), mIcon.getTop(), mIcon.getRight(), mIcon.getBottom());                   <span class="comment">//以背景图片为基础画一个矩形</span></span><br><span class="line">            <span class="keyword">float</span> startAngle = -<span class="number">90</span>;             <span class="comment">//-90相当于就是"正北"</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">float</span> sweepAngle = mProgress * <span class="number">360</span>.f / mMax;            <span class="comment">//旋转的角度</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">boolean</span> useCenter = <span class="keyword">false</span>;          <span class="comment">//是否保留两边的半径</span></span><br><span class="line"></span><br><span class="line">            Paint paint = <span class="keyword">new</span> Paint();</span><br><span class="line">            paint.setColor(Color.BLUE);                 <span class="comment">//蓝色的画笔</span></span><br><span class="line">            paint.setStyle(Paint.Style.STROKE);</span><br><span class="line">            paint.setStrokeWidth(<span class="number">5</span>);                <span class="comment">//设置画笔的粗细,也就是进度条的粗细</span></span><br><span class="line">            paint.setAntiAlias(<span class="keyword">true</span>);           <span class="comment">//消除锯齿</span></span><br><span class="line">            <span class="comment">// 开始画一条弧,表示进度</span></span><br><span class="line">            canvas.drawArc(oval, startAngle, sweepAngle, useCenter, paint);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></font></p>
<h2 id="activity_main-xml">activity_main.xml</h2><p><font size="4"><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">RelativeLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:paddingBottom</span>=<span class="value">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    <span class="attribute">android:paddingLeft</span>=<span class="value">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    <span class="attribute">android:paddingRight</span>=<span class="value">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    <span class="attribute">android:paddingTop</span>=<span class="value">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    <span class="attribute">tools:context</span>=<span class="value">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">com.yongf.circleprogressview.CircleProgressView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/cpv"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">" "</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></font></p>
<h2 id="MainActivity-java">MainActivity.java</h2><p><font size="4"><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yongf.circleprogressview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.AsyncTask;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.SystemClock;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> CircleProgressView cpv = (CircleProgressView) findViewById(R.id.cpv);</span><br><span class="line">        cpv.setDesc(<span class="string">"下载"</span>);</span><br><span class="line">        cpv.setIcon(R.drawable.ic_pause);</span><br><span class="line"></span><br><span class="line">        cpv.setProgressEnable(<span class="keyword">true</span>);</span><br><span class="line">        cpv.setMax(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">        cpv.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">new</span> AsyncTask&lt;Void, Integer, Void&gt;() &#123;</span><br><span class="line">                    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="annotation">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">protected</span> Void <span class="title">doInBackground</span><span class="params">(Void... params)</span> </span>&#123;</span><br><span class="line">                        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                            publishProgress(i);</span><br><span class="line">                            SystemClock.sleep(<span class="number">100</span>);</span><br><span class="line">                            <span class="keyword">if</span> (i &gt;= <span class="number">100</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            i++;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="annotation">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onProgressUpdate</span><span class="params">(Integer... values)</span> </span>&#123;</span><br><span class="line">                        Integer value = values[<span class="number">0</span>];</span><br><span class="line">                        cpv.setProgress(i);</span><br><span class="line">                        cpv.setDesc(i + <span class="string">"%"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;.execute();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></font></p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><p><font size=4><br>自定义View有多种实现类型,分别为继承自View完全自定义,继承自现有控件(如ImageView)实现特定效果,继承自ViewGroup实现布局类.这里面涉及到View的测量和布局,View的绘制,处理触摸事件,动画等.</p>]]>
    
    </summary>
    
      <category term="Android开发" scheme="http://blog.54yongf.com/tags/Android%E5%BC%80%E5%8F%91/"/>
    
      <category term="Android开发" scheme="http://blog.54yongf.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[No47-原-Git repository corrupt(incorrect header check; loose object is corrupt]]></title>
    <link href="http://blog.54yongf.com/Git/47.html"/>
    <id>http://blog.54yongf.com/Git/47.html</id>
    <published>2016-04-17T04:42:36.000Z</published>
    <updated>2016-04-17T04:42:36.000Z</updated>
    <content type="html"><![CDATA[<h2 id="问题描述">问题描述</h2><p><font size="4"><br>今天Coding完之后，正准备commit代码，结果报了个错，从没见过：</font></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">% git <span class="operator"><span class="keyword">commit</span></span><br><span class="line"><span class="keyword">error</span>: inflate: <span class="keyword">data</span> stream <span class="keyword">error</span> (incorrect header <span class="keyword">check</span>)</span><br><span class="line"><span class="keyword">error</span>: unable <span class="keyword">to</span> unpack a94406345ac44982b00cf57b4b9660a35436637f header</span><br><span class="line">fatal: a94406345ac44982b00cf57b4b9660a35436637f <span class="keyword">is</span> <span class="keyword">not</span> a valid <span class="keyword">object</span></span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="开始分析">开始分析</h2><p><font size="4"><br>我一看，是data stream error, 又想到今天刚刚把移动硬盘强行拔掉，导致硬盘部分文件受损的事，我一想，完犊子，估计是git文件出问题了。然而我不懂啊，最后，狠下心，算了，直接先从github上clone昨天的代码，然后慢慢改吧（话说今天改了很多代码，加了很多代码来着）。</font></p>
<h2 id="Clone远程库">Clone远程库</h2><p><font size="4"><br>开始克隆远程库，使用Android Studio，突然，蹦出个错：</font></p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Clone failed Out <span class="keyword">of</span> memory, malloc failed (tried <span class="keyword">to</span> allocate <span class="number">2934353408</span> bytes)</span><br><span class="line"><span class="command">write</span> <span class="keyword">error</span>: Invalid argument</span><br></pre></td></tr></table></figure>
<p>看到这个，我猜到可能是传输数据大小限制问题，详情请查看我<a href="/Git/40.html" title="Git Push出问题">另外一篇博文</a>。解决掉这个问题之后，顺利克隆远程库。</p>
<h2 id="正式解决问题">正式解决问题</h2><p><font size="4"><br>但是，我还是不甘心，我实在是不想在昨天的代码上慢慢改了。于是，开始Google。在StackOverflow上，找到了一个同样的问题，下面有个21个赞的回答，我一想，有救了~&gt;_&lt;~+。没想到竟然真的治好了我，步骤如下：</font></p>
<ol>
<li>进入本地git库，也就是.git文件夹的位置</li>
<li><p>运行<code>git fsck --full</code>，关于这条指令的作用，<a href="http://blog.csdn.net/hudashi/article/details/7668795" title="Git维护" target="_blank" rel="external">请看这里</a>。然后，你可能看到下面这样的</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Checking object directories: 100% (256/256), done.</span><br><span class="line">error: inflate: data stream error (incorrect header <span class="operator"><span class="keyword">check</span>)</span><br><span class="line"><span class="keyword">error</span>: unable <span class="keyword">to</span> unpack <span class="number">86e7247</span>af5865e857a3b61eed99986e2d9538df1 header</span><br><span class="line"><span class="keyword">error</span>: inflate: <span class="keyword">data</span> stream <span class="keyword">error</span> (incorrect header <span class="keyword">check</span>)</span><br><span class="line">fatal: loose <span class="keyword">object</span> <span class="number">86e7247</span>af5865e857a3b61eed99986e2d9538df1 (<span class="keyword">stored</span> <span class="keyword">in</span> .git/objects/<span class="number">86</span>/e7247af5865e857a3b61eed99986e2d9538df1) <span class="keyword">is</span> corrupt</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在执行下面的操作之前，墙裂建议<strong>备份.git/objects文件夹</strong>！</p>
</li>
<li>删除上述文件<code>.git/objects/86/e7247af5865e857a3b61eed99986e2d9538df1</code>，然后再次运行<code>git fsck --full</code></li>
<li><p>重复步骤4，直到<code>git fsck --full</code>的提示信息变成类似下面这样的<br><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No47-git%E5%8F%88%E5%87%BA%E9%97%AE%E9%A2%98%E4%BA%86.png" alt="提醒信息：dangling blob"></p>
</li>
<li><p>我只删了一次文件就OK了，然后重新commit，竟然OK，OMG。不过原帖中答主可是删了5次文件才弄好的。</p>
</li>
</ol>
<h2 id="参考资料">参考资料</h2><p><font size="4"><br><a href="http://stackoverflow.com/questions/23725925/git-repository-corrupt-incorrect-header-check-loose-object-is-corrupt" target="_blank" rel="external">http://stackoverflow.com/questions/23725925/git-repository-corrupt-incorrect-header-check-loose-object-is-corrupt</a></font></p>
<h2 id="总结">总结</h2><p><font size="4"><br>咳咳，简单总结一下。果然是Google大法好，StackOverflow大法好，我在百度搜了好久没找到这个答案，而在Google直接就找到了。果然是百度娱乐，Google学术啊。<br>我的Github：<a href="http://github.com/wangyongf" target="_blank" rel="external">http://github.com/wangyongf</a></font></p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="问题描述">问题描述</h2><p><font size=4><br>今天Coding完之后，正准备commit代码，结果报了个错，从没见过：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">% git <span class="operator"><span class="keyword">commit</span></span><br><span class="line"><span class="keyword">error</span>: inflate: <span class="keyword">data</span> stream <span class="keyword">error</span> (incorrect header <span class="keyword">check</span>)</span><br><span class="line"><span class="keyword">error</span>: unable <span class="keyword">to</span> unpack a94406345ac44982b00cf57b4b9660a35436637f header</span><br><span class="line">fatal: a94406345ac44982b00cf57b4b9660a35436637f <span class="keyword">is</span> <span class="keyword">not</span> a valid <span class="keyword">object</span></span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="Git" scheme="http://blog.54yongf.com/tags/Git/"/>
    
      <category term="Git" scheme="http://blog.54yongf.com/categories/Git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[No46-原-计算机算法设计与分析-三个水杯倒水问题]]></title>
    <link href="http://blog.54yongf.com/%E7%AE%97%E6%B3%95/46.html"/>
    <id>http://blog.54yongf.com/算法/46.html</id>
    <published>2016-04-15T15:29:02.000Z</published>
    <updated>2016-04-15T15:29:02.000Z</updated>
    <content type="html"><![CDATA[<h2 id="题目来源">题目来源</h2><p><font size="4"><br>南阳理工学院OJ:<a href="http://acm.nyist.net/JudgeOnline/problem.php?pid=21" target="_blank" rel="external">http://acm.nyist.net/JudgeOnline/problem.php?pid=21</a></font></p>
<h2 id="问题描述">问题描述</h2><p><font size="4"><br>给出三个水杯，大小不一，并且只有最大的水杯的水是装满的，其余两个为空杯子。三个水杯之间相互倒水，并且水杯没有标识，只能根据给出的水杯体积来计算。现在要求你写出一个程序，使其输出使初始状态到达目标状态的最少次数。</font></p>
<a id="more"></a>
<h2 id="输入">输入</h2><p><font size="4"><br>输入数据由input.txt给出.<br>测试数据有两行，第一行给出三个整数V1 V2 V3 (V1&gt;V2&gt;V3 V1<100 v3="">0)表示三个水杯的体积。<br>第二行给出三个整数E1 E2 E3 （体积小于等于相应水杯体积）表示我们需要的最终状态</100></font></p>
<h2 id="输出">输出</h2><p><font size="4"><br>输出到文件output.txt中<br>如果能够达到目标状态输出true,达不到输出false</font></p>
<h2 id="样例输入">样例输入</h2><p><font size="4"><br>input.txt<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span> <span class="number">3</span> <span class="number">1</span></span><br><span class="line"><span class="number">4</span> <span class="number">1</span> <span class="number">1</span></span><br></pre></td></tr></table></figure></font></p>
<h2 id="样例输出">样例输出</h2><p><font size="4"><br>output.txt<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">true</span></span><br></pre></td></tr></table></figure></font></p>
<h2 id="C++实现">C++实现</h2><p><font size="4"><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">* @Author: Scott Wang</span><br><span class="line">* @Date:   2016-04-15 21:36:02</span><br><span class="line">* @Last Modified by:   Scott Wang</span><br><span class="line">* @Last Modified time: 2016-04-15 23:08:34</span><br><span class="line">*/</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> Node</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> id;                     <span class="comment">//当前节点在vector中的位置</span></span><br><span class="line">    <span class="keyword">int</span> current[<span class="number">3</span>];         <span class="comment">//当前３个水杯中的水量</span></span><br><span class="line">    <span class="keyword">int</span> step;                   <span class="comment">//已走的步数</span></span><br><span class="line">    <span class="keyword">int</span> father;                 <span class="comment">//标记上一步</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printStep</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output2Terminal</span><span class="params">(<span class="keyword">bool</span> result)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">bool</span> result)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> work[<span class="number">6</span>][<span class="number">2</span>] = &#123;&#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">0</span>, <span class="number">2</span>&#125;, &#123;<span class="number">1</span>, <span class="number">0</span>&#125;, &#123;<span class="number">1</span>, <span class="number">2</span>&#125;, &#123;<span class="number">2</span>, <span class="number">0</span>&#125;, &#123;<span class="number">2</span>, <span class="number">1</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> src[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> des[<span class="number">3</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;Node&gt; v;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> result;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化数据</span></span><br><span class="line">    input();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 进行广度优先遍历</span></span><br><span class="line">    result = bfs();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在控制台输出结果</span></span><br><span class="line">    output2Terminal(result);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出结果到output.txt</span></span><br><span class="line">    output(result);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 初始化杯子的容量和目标水量</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="function">ifstream <span class="title">input</span><span class="params">(<span class="string">"input.txt"</span>, ios::in)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (!input.is_open())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cerr</span> &lt;&lt; <span class="string">"Can't open input.txt"</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">exit</span>(-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    input &gt;&gt; src[<span class="number">0</span>] &gt;&gt; src[<span class="number">1</span>] &gt;&gt; src[<span class="number">2</span>];</span><br><span class="line">    input &gt;&gt; des[<span class="number">0</span>] &gt;&gt; des[<span class="number">1</span>] &gt;&gt; des[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    input.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 进行广度优先遍历</span><br><span class="line"> * @return 判断结果</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> front = <span class="number">0</span>, rear = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">bool</span> foot[<span class="number">100</span>][<span class="number">100</span>][<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    Node temp = &#123;<span class="number">0</span>, &#123;src[<span class="number">0</span>], <span class="number">0</span>, <span class="number">0</span>&#125;, <span class="number">0</span>, -<span class="number">1</span>&#125;;</span><br><span class="line">    foot[temp.current[<span class="number">0</span>]][temp.current[<span class="number">1</span>]][temp.current[<span class="number">2</span>]] = <span class="literal">true</span>;</span><br><span class="line">    v.push_back(temp);</span><br><span class="line">    rear++;</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (front &lt; rear)</span><br><span class="line">    &#123;</span><br><span class="line">        index++;</span><br><span class="line">        temp = v[front++];</span><br><span class="line">        <span class="keyword">if</span> (temp.current[<span class="number">0</span>] == des[<span class="number">0</span>] &amp;&amp;</span><br><span class="line">                temp.current[<span class="number">1</span>] == des[<span class="number">1</span>] &amp;&amp;</span><br><span class="line">                temp.current[<span class="number">2</span>] == des[<span class="number">2</span>] )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            Node temp1 = temp;</span><br><span class="line">            temp1.step++;</span><br><span class="line">            temp1.father = temp.step;</span><br><span class="line">            <span class="keyword">int</span> s = work[i][<span class="number">0</span>], d = work[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">int</span> available = src[d] - temp1.current[d];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0</span> == temp1.current[s] || <span class="number">0</span> == available)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (temp1.current[s] &lt;= available)</span><br><span class="line">            &#123;</span><br><span class="line">                temp1.current[d] += temp1.current[s];</span><br><span class="line">                temp1.current[s] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                temp1.current[s] -= available;</span><br><span class="line">                temp1.current[d] = src[d];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!foot[temp1.current[<span class="number">0</span>]][temp1.current[<span class="number">1</span>]][temp1.current[<span class="number">2</span>]])</span><br><span class="line">            &#123;</span><br><span class="line">                temp1.id = v.size() - <span class="number">1</span>;</span><br><span class="line">                v.push_back(temp1);</span><br><span class="line">                rear++;</span><br><span class="line">                foot[temp1.current[<span class="number">0</span>]][temp1.current[<span class="number">1</span>]][temp1.current[<span class="number">2</span>]] = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 输出倒水的步骤</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printStep</span><span class="params">(<span class="keyword">int</span> id)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (id)</span><br><span class="line">    &#123;</span><br><span class="line">        printStep(v[id].father);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; v[id].current[<span class="number">0</span>] &lt;&lt; <span class="string">"\t"</span> &lt;&lt; v[id].current[<span class="number">1</span>] &lt;&lt; <span class="string">"\t"</span> &lt;&lt; v[id].current[<span class="number">2</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 输出结果到控制台</span><br><span class="line"> * @param result 结果</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output2Terminal</span><span class="params">(<span class="keyword">bool</span> result)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (result)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"共需"</span> &lt;&lt; v.back().step &lt;&lt; <span class="string">"次"</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"步骤为："</span> &lt;&lt; endl;</span><br><span class="line">        printStep(v.size() - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"此题无解"</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 返回结果 - 是否找到满足条件的倒法</span><br><span class="line"> * @param result 结果 true or false</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">bool</span> result)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="function">ofstream <span class="title">output</span><span class="params">(<span class="string">"output.txt"</span>, ios::out)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (!output.is_open())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cerr</span> &lt;&lt; <span class="string">"Can't open output.txt"</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">exit</span>(-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    output &lt;&lt; (result ? <span class="string">"true"</span> : <span class="string">"false"</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    output.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></font></p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="题目来源">题目来源</h2><p><font size=4><br>南阳理工学院OJ:<a href="http://acm.nyist.net/JudgeOnline/problem.php?pid=21">http://acm.nyist.net/JudgeOnline/problem.php?pid=21</a></p>
<h2 id="问题描述">问题描述</h2><p><font size=4><br>给出三个水杯，大小不一，并且只有最大的水杯的水是装满的，其余两个为空杯子。三个水杯之间相互倒水，并且水杯没有标识，只能根据给出的水杯体积来计算。现在要求你写出一个程序，使其输出使初始状态到达目标状态的最少次数。</p>]]>
    
    </summary>
    
      <category term="算法" scheme="http://blog.54yongf.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="算法" scheme="http://blog.54yongf.com/categories/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[No45-原-Android中使用自定义字体-使用Android Studio]]></title>
    <link href="http://blog.54yongf.com/Android%E5%BC%80%E5%8F%91/45.html"/>
    <id>http://blog.54yongf.com/Android开发/45.html</id>
    <published>2016-04-11T17:45:32.000Z</published>
    <updated>2016-04-11T17:45:32.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p><font size="4"><br>最近在开发一款APP（其实是学习中），想要在一个页面中使用自定义字体。在使用过程中遇到了一些坑，特在此分享。我使用的是Android Studio 1.4, Win7</font></p>
<a id="more"></a>
<h2 id="使用自定义字体">使用自定义字体</h2><p><font size="4"></font></p>
<ol>
<li>首先下载好想要的字体文件<code>example.ttf</code></li>
<li><p>将其拷贝到项目Module下面的<code>assets/fonts/example.ttf</code>下面，先创建该文件夹，如下图所示：<br><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No45-1.png" alt="assets/fonts/example.ttf"></p>
</li>
<li><p>对你想要定制字体的控件进行字体设置：</p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Typeface type= Typeface.createFromAsset(getAssets(),<span class="string">"fonts/example.ttf"</span>);</span><br><span class="line"></span><br><span class="line"> et_note = (EditText) findViewById(R.id.et_note);</span><br><span class="line"></span><br><span class="line"> et_note.setTypeface(type);</span><br></pre></td></tr></table></figure>
<p>此处只是举例，具体可根据自己需要。<br>但是此时运行项目，会出现<code>RuntimeException</code>:</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">AndroidRuntime: FATAL EXCEPTION: main</span><br><span class="line">AndroidRuntime: java<span class="class">.lang</span><span class="class">.RuntimeException</span>: native typeface cannot be made</span><br><span class="line">AndroidRuntime:     at android<span class="class">.graphics</span><span class="class">.Typeface</span>.&lt;init&gt;(Typeface<span class="class">.java</span>:<span class="number">175</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.graphics</span><span class="class">.Typeface</span><span class="class">.createFromAsset</span>(Typeface<span class="class">.java</span>:<span class="number">149</span>)</span><br><span class="line">AndroidRuntime:     at com<span class="class">.yongf</span><span class="class">.googleplay</span><span class="class">.holder</span><span class="class">.SubjectHolder</span><span class="class">.refreshHolderView</span>(SubjectHolder<span class="class">.java</span>:<span class="number">54</span>)</span><br><span class="line">AndroidRuntime:     at com<span class="class">.yongf</span><span class="class">.googleplay</span><span class="class">.holder</span><span class="class">.SubjectHolder</span><span class="class">.refreshHolderView</span>(SubjectHolder<span class="class">.java</span>:<span class="number">35</span>)</span><br><span class="line">AndroidRuntime:     at com<span class="class">.yongf</span><span class="class">.googleplay</span><span class="class">.base</span><span class="class">.BaseHolder</span><span class="class">.setDataAndRefreshHolderView</span>(BaseHolder<span class="class">.java</span>:<span class="number">58</span>)</span><br><span class="line">AndroidRuntime:     at com<span class="class">.yongf</span><span class="class">.googleplay</span><span class="class">.base</span><span class="class">.SuperBaseAdapter</span><span class="class">.getView</span>(SuperBaseAdapter<span class="class">.java</span>:<span class="number">132</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.widget</span><span class="class">.AbsListView</span><span class="class">.obtainView</span>(AbsListView<span class="class">.java</span>:<span class="number">2267</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.widget</span><span class="class">.ListView</span><span class="class">.makeAndAddView</span>(ListView<span class="class">.java</span>:<span class="number">1769</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.widget</span><span class="class">.ListView</span><span class="class">.fillDown</span>(ListView<span class="class">.java</span>:<span class="number">672</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.widget</span><span class="class">.ListView</span><span class="class">.fillFromTop</span>(ListView<span class="class">.java</span>:<span class="number">733</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.widget</span><span class="class">.ListView</span><span class="class">.layoutChildren</span>(ListView<span class="class">.java</span>:<span class="number">1622</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.widget</span><span class="class">.AbsListView</span><span class="class">.onLayout</span>(AbsListView<span class="class">.java</span>:<span class="number">2102</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.View</span><span class="class">.layout</span>(View<span class="class">.java</span>:<span class="number">13754</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.ViewGroup</span><span class="class">.layout</span>(ViewGroup<span class="class">.java</span>:<span class="number">4362</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.widget</span><span class="class">.FrameLayout</span><span class="class">.onLayout</span>(FrameLayout<span class="class">.java</span>:<span class="number">448</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.View</span><span class="class">.layout</span>(View<span class="class">.java</span>:<span class="number">13754</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.ViewGroup</span><span class="class">.layout</span>(ViewGroup<span class="class">.java</span>:<span class="number">4362</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.support</span><span class="class">.v4</span><span class="class">.view</span><span class="class">.ViewPager</span><span class="class">.onLayout</span>(ViewPager<span class="class">.java</span>:<span class="number">1627</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.View</span><span class="class">.layout</span>(View<span class="class">.java</span>:<span class="number">13754</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.ViewGroup</span><span class="class">.layout</span>(ViewGroup<span class="class">.java</span>:<span class="number">4362</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.widget</span><span class="class">.LinearLayout</span><span class="class">.setChildFrame</span>(LinearLayout<span class="class">.java</span>:<span class="number">1649</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.widget</span><span class="class">.LinearLayout</span><span class="class">.layoutVertical</span>(LinearLayout<span class="class">.java</span>:<span class="number">1507</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.widget</span><span class="class">.LinearLayout</span><span class="class">.onLayout</span>(LinearLayout<span class="class">.java</span>:<span class="number">1420</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.View</span><span class="class">.layout</span>(View<span class="class">.java</span>:<span class="number">13754</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.ViewGroup</span><span class="class">.layout</span>(ViewGroup<span class="class">.java</span>:<span class="number">4362</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.support</span><span class="class">.v4</span><span class="class">.widget</span><span class="class">.DrawerLayout</span><span class="class">.onLayout</span>(DrawerLayout<span class="class">.java</span>:<span class="number">1043</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.View</span><span class="class">.layout</span>(View<span class="class">.java</span>:<span class="number">13754</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.ViewGroup</span><span class="class">.layout</span>(ViewGroup<span class="class">.java</span>:<span class="number">4362</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.widget</span><span class="class">.FrameLayout</span><span class="class">.onLayout</span>(FrameLayout<span class="class">.java</span>:<span class="number">448</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.View</span><span class="class">.layout</span>(View<span class="class">.java</span>:<span class="number">13754</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.ViewGroup</span><span class="class">.layout</span>(ViewGroup<span class="class">.java</span>:<span class="number">4362</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.support</span><span class="class">.v7</span><span class="class">.widget</span><span class="class">.ActionBarOverlayLayout</span><span class="class">.onLayout</span>(ActionBarOverlayLayout<span class="class">.java</span>:<span class="number">435</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.View</span><span class="class">.layout</span>(View<span class="class">.java</span>:<span class="number">13754</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.ViewGroup</span><span class="class">.layout</span>(ViewGroup<span class="class">.java</span>:<span class="number">4362</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.widget</span><span class="class">.FrameLayout</span><span class="class">.onLayout</span>(FrameLayout<span class="class">.java</span>:<span class="number">448</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.View</span><span class="class">.layout</span>(View<span class="class">.java</span>:<span class="number">13754</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.ViewGroup</span><span class="class">.layout</span>(ViewGroup<span class="class">.java</span>:<span class="number">4362</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.widget</span><span class="class">.LinearLayout</span><span class="class">.setChildFrame</span>(LinearLayout<span class="class">.java</span>:<span class="number">1649</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.widget</span><span class="class">.LinearLayout</span><span class="class">.layoutVertical</span>(LinearLayout<span class="class">.java</span>:<span class="number">1507</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.widget</span><span class="class">.LinearLayout</span><span class="class">.onLayout</span>(LinearLayout<span class="class">.java</span>:<span class="number">1420</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.View</span><span class="class">.layout</span>(View<span class="class">.java</span>:<span class="number">13754</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.ViewGroup</span><span class="class">.layout</span>(ViewGroup<span class="class">.java</span>:<span class="number">4362</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.widget</span><span class="class">.FrameLayout</span><span class="class">.onLayout</span>(FrameLayout<span class="class">.java</span>:<span class="number">448</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.View</span><span class="class">.layout</span>(View<span class="class">.java</span>:<span class="number">13754</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.ViewGroup</span><span class="class">.layout</span>(ViewGroup<span class="class">.java</span>:<span class="number">4362</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.ViewRootImpl</span><span class="class">.performLayout</span>(ViewRootImpl<span class="class">.java</span>:<span class="number">1866</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.ViewRootImpl</span><span class="class">.performTraversals</span>(ViewRootImpl<span class="class">.java</span>:<span class="number">1687</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.ViewRootImpl</span><span class="class">.doTraversal</span>(ViewRootImpl<span class="class">.java</span>:<span class="number">998</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.ViewRootImpl</span><span class="variable">$TraversalRunnable</span>.<span class="function"><span class="title">run</span><span class="params">(ViewRootImpl.java:<span class="number">4212</span>)</span></span></span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.Choreographer</span><span class="variable">$CallbackRecord</span>.<span class="function"><span class="title">run</span><span class="params">(Choreographer.java:<span class="number">725</span>)</span></span></span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.Choreographer</span><span class="class">.doCallbacks</span>(Choreographer<span class="class">.java</span>:<span class="number">555</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.Choreographer</span><span class="class">.doFrame</span>(Choreographer<span class="class">.java</span>:<span class="number">525</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.view</span><span class="class">.Choreographer</span><span class="variable">$FrameDisplayEventReceiver</span>.<span class="function"><span class="title">run</span><span class="params">(Choreographer.java:<span class="number">711</span>)</span></span></span><br><span class="line">AndroidRuntime:     at android<span class="class">.os</span><span class="class">.Handler</span><span class="class">.handleCallback</span>(Handler<span class="class">.java</span>:<span class="number">615</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.os</span><span class="class">.Handler</span><span class="class">.dispatchMessage</span>(Handler<span class="class">.java</span>:<span class="number">92</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.os</span><span class="class">.Looper</span><span class="class">.loop</span>(Looper<span class="class">.java</span>:<span class="number">137</span>)</span><br><span class="line">AndroidRuntime:     at android<span class="class">.app</span><span class="class">.ActivityThread</span><span class="class">.main</span>(ActivityThread<span class="class">.java</span>:<span class="number">4745</span>)</span><br><span class="line">AndroidRuntime:     at java<span class="class">.lang</span><span class="class">.reflect</span><span class="class">.Method</span><span class="class">.invokeNative</span>(Native Method)</span><br><span class="line"></span><br><span class="line"><span class="number">04</span>-<span class="number">11</span> <span class="number">17</span>:<span class="number">57</span>:<span class="number">40.400</span> <span class="number">10374</span>-<span class="number">10374</span>/com<span class="class">.yongf</span><span class="class">.googleplay</span> E/AndroidRuntime:     at java<span class="class">.lang</span><span class="class">.reflect</span><span class="class">.Method</span><span class="class">.invoke</span>(Method<span class="class">.java</span>:<span class="number">511</span>)</span><br><span class="line">AndroidRuntime:     at com<span class="class">.android</span><span class="class">.internal</span><span class="class">.os</span><span class="class">.ZygoteInit</span><span class="variable">$MethodAndArgsCaller</span>.<span class="function"><span class="title">run</span><span class="params">(ZygoteInit.java:<span class="number">786</span>)</span></span></span><br><span class="line">AndroidRuntime:     at com<span class="class">.android</span><span class="class">.internal</span><span class="class">.os</span><span class="class">.ZygoteInit</span><span class="class">.main</span>(ZygoteInit<span class="class">.java</span>:<span class="number">553</span>)</span><br><span class="line">AndroidRuntime:     at dalvik<span class="class">.system</span><span class="class">.NativeStart</span><span class="class">.main</span>(Native Method)</span><br></pre></td></tr></table></figure>
<h2 id="解决问题">解决问题</h2><p><font size="4"><br>至于为什么，没有搞清楚，看StackOverflow那帮人好像说是Android的一个八阿哥 @_@ （PS：如果你清楚，不要吝啬你的才华，留下言呗）。<br>下面是我的解决方案（针对Android Studio用户）：<br> 在模块的build.gradle中，添加（和defaultConfig同级）：</font></p>
<figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="name">sourceSets</span> &#123;</span><br><span class="line">        <span class="keyword">main</span> &#123;</span><br><span class="line">            assets.srcDirs = [<span class="string">'assets'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>编译运行，OK！</p>
<h2 id="最后，运行截图">最后，运行截图</h2><p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No45-2.png" alt="成功啦！"></p>
<h2 id="参考">参考</h2><p><font size="4"><br>StackOverflow：<a href="http://stackoverflow.com/questions/12766930/native-typeface-cannot-be-made-only-for-some-people" target="_blank" rel="external">http://stackoverflow.com/questions/12766930/native-typeface-cannot-be-made-only-for-some-people</a></font></p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><p><font size=4><br>最近在开发一款APP（其实是学习中），想要在一个页面中使用自定义字体。在使用过程中遇到了一些坑，特在此分享。我使用的是Android Studio 1.4, Win7</p>]]>
    
    </summary>
    
      <category term="Android开发" scheme="http://blog.54yongf.com/tags/Android%E5%BC%80%E5%8F%91/"/>
    
      <category term="Android开发" scheme="http://blog.54yongf.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[No44-原-Visual Studio Code使用初体验]]></title>
    <link href="http://blog.54yongf.com/%E6%9D%82%E8%B0%88/44.html"/>
    <id>http://blog.54yongf.com/杂谈/44.html</id>
    <published>2016-04-10T14:08:27.000Z</published>
    <updated>2016-04-10T14:08:27.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Visual_Studio_Code_使用初体验">Visual Studio Code 使用初体验</h2><p><font size="4"><br>作为一个资深菜鸟,先说说结论:用VCS写Markdown真心好用.写HTML也不错,HTML代码格式化做的挺好,CSS,JS还没试,应该可以的吧.我是在Ubuntu 14.04下使用VSC的,使用的是<code>Monokai</code>主题,颜值和我使用Sublime Text 3有的一拼.<br><br>之前在Ubuntu下一直没有找到一款好用的Markdown编辑器(如果你有好的推荐,请留言哦 ^_^ ),现在,我可以用VSC写Markdown写得飞起了.VSC的缺点也挺多,比如说BUG稍微有点多,插件呢,也相对比较少,毕竟作为新人嘛,到现在为止,还在<code>0.10.11</code>版本,算是预览版吧.不过,现在巨硬也一直在推荐VSC,VSC一直在发展,相信会有越来越多的人喜欢上这款编辑器的.</font></p>
<h2 id="关于VSC的Markdown写作的特性">关于VSC的Markdown写作的特性</h2><p><font size="4"></font></p>
<ol>
<li>可以定制Snippets,加快写作速度(不过还是没有直接使用快捷键的爽啊 QAQ)</li>
<li>支持实时预览,边写边看,左边写,右边预览(快捷键Ctrl+K, V 不谢)</li>
<li>支持全文预览,适合写完之后看一下效果(快捷键Ctrl+Shift+V)</li>
<li>上述功能为VSC自带,不使用任何插件,因为目前关于Markdown的插件很少</li>
</ol>
<h2 id="最后,来几张美照吧">最后,来几张美照吧</h2><p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No44-%E7%94%A8vs%20code%E5%86%99markdown.png" alt="我的VSC"></p>
<p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No44-VSCODE.png" alt="我的VSC"></p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Visual_Studio_Code_使用初体验">Visual Studio Code 使用初体验</h2><p><font size="4"><br>作为一个资深菜鸟,先说说结论:用VCS写Markdown真心好用.写HTML也不错,HTML代码格式化做的挺好]]>
    </summary>
    
      <category term="Visual Studio Code" scheme="http://blog.54yongf.com/tags/Visual-Studio-Code/"/>
    
      <category term="杂谈" scheme="http://blog.54yongf.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="杂谈" scheme="http://blog.54yongf.com/categories/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[No43-原-计算机算法设计与分析-统计数字问题]]></title>
    <link href="http://blog.54yongf.com/%E7%AE%97%E6%B3%95/43.html"/>
    <id>http://blog.54yongf.com/算法/43.html</id>
    <published>2016-04-10T12:43:58.000Z</published>
    <updated>2016-04-15T15:52:30.000Z</updated>
    <content type="html"><![CDATA[<h2 id="题目来源">题目来源</h2><p><font size="4"><br>计算机算法设计与分析第二版-王晓东 P8</font></p>
<h4 id="问题描述">问题描述</h4><p><font size="4"><br>一本书的页码从自然数1开始顺序编码直到自然数n.书的页码按照通常的习惯编排,每个页码都不含多余的前导数字0.例如,第6页用数字6表示,而不是06或006等.数字计数问题要求对给定书的总页码n,计算出书的全部页码中分别用到多少次数字0, 1, 2, 3, 4, …, 9.</font></p>
<a id="more"></a>
<h4 id="算法设计">算法设计</h4><p><font size="4"><br>给定表示书的总页码的十进制数n(1&lt;=n&lt;=10^9),计算书的全部页码中分别用到多少次数字0, 1, 2, …, 9.</font></p>
<h4 id="数据输入">数据输入</h4><p><font size="4"><br>输入数据由文件名为input.txt的文本文件提供.每个文件只有一行,给出表示书的总页码的整数n.</font></p>
<h4 id="结果输出">结果输出</h4><p><font size="4"><br>将计算结果输出到文件output.txt.输出文件共有10行,在第k行输出页码中用到数字k-1的次数,k = 1, 2, …, 10.</font></p>
<h4 id="输入文件示例">输入文件示例</h4><p><font size="4"><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">input</span><span class="class">.txt</span></span><br><span class="line"><span class="number">11</span></span><br></pre></td></tr></table></figure></font></p>
<h4 id="输出文件示例">输出文件示例</h4><p><font size="4"><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">output.txt</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure></font></p>
<h4 id="C++实现">C++实现</h4><p><font size="4"><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">* @Author: Scott Wang</span><br><span class="line">* @Date:   2016-04-07 23:18:13</span><br><span class="line">* @Last Modified by:   Scott Wang</span><br><span class="line">* @Last Modified time: 2016-04-10 21:38:01</span><br><span class="line">*/</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">"stdlib.h"</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">initNumber</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calculate</span><span class="params">(<span class="keyword">int</span> number, <span class="keyword">int</span>* result)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span>* result, <span class="keyword">int</span> count)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> number;</span><br><span class="line">    <span class="keyword">int</span> result[<span class="number">10</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    number = initNumber();</span><br><span class="line"></span><br><span class="line">    calculate(number, result);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> count = <span class="keyword">sizeof</span>(result) / <span class="keyword">sizeof</span>(result[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    output(result, count);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 从文件中获取数字</span><br><span class="line"> * @return 书的页码</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">initNumber</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="built_in">istringstream</span> iss;</span><br><span class="line">    <span class="built_in">string</span> line;</span><br><span class="line">    <span class="function">ifstream <span class="title">input</span><span class="params">(<span class="string">"input.txt"</span>, ios::in)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (!input.is_open())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cerr</span> &lt;&lt; <span class="string">"Can't open input.txt"</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">exit</span>(-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getline(input, line);</span><br><span class="line">    iss.str(line);</span><br><span class="line">    iss &gt;&gt; num;</span><br><span class="line">    iss.clear();</span><br><span class="line"></span><br><span class="line">    input.close();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 计算页码</span><br><span class="line"> * @param number 页码</span><br><span class="line"> * @param result 存储结果的数组(全部页码分别用到0-9多少次)</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calculate</span><span class="params">(<span class="keyword">int</span> number, <span class="keyword">int</span>* result)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// cout&lt;&lt;number&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= number; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        j = i;</span><br><span class="line">        <span class="keyword">while</span> (j &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            result[j % <span class="number">10</span>]++;</span><br><span class="line"></span><br><span class="line">            j = j / <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 将计算结果输出</span><br><span class="line"> * @param result 要输出的结果(result[10])</span><br><span class="line"> * @param count 结果数组的大小</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span>* result, <span class="keyword">int</span> count)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="function">ofstream <span class="title">output</span><span class="params">(<span class="string">"output.txt"</span>, ios::out)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        output &lt;&lt; result[i] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    output.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></font></p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="题目来源">题目来源</h2><p><font size=4><br>计算机算法设计与分析第二版-王晓东 P8</p>
<h4 id="问题描述">问题描述</h4><p><font size=4><br>一本书的页码从自然数1开始顺序编码直到自然数n.书的页码按照通常的习惯编排,每个页码都不含多余的前导数字0.例如,第6页用数字6表示,而不是06或006等.数字计数问题要求对给定书的总页码n,计算出书的全部页码中分别用到多少次数字0, 1, 2, 3, 4, …, 9.</p>]]>
    
    </summary>
    
      <category term="算法" scheme="http://blog.54yongf.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="算法" scheme="http://blog.54yongf.com/categories/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[No42-原-Windows下Apache使用问题总结（持续更新）]]></title>
    <link href="http://blog.54yongf.com/%E6%9D%82%E8%B0%88/42.html"/>
    <id>http://blog.54yongf.com/杂谈/42.html</id>
    <published>2016-03-31T10:56:41.000Z</published>
    <updated>2016-03-31T10:56:41.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p><font size="4"><br>在使用apache的过程中，遇到了很多问题，也学会了很多，特将一些常见的问题总结出来，以供参考。</font></p>
<a id="more"></a>
<h2 id="apache无法启动">apache无法启动</h2><p><font size="4"><br>The request operation has failed</font></p>
<p><font size="4">一般来说，都是端口被占用所导致的。apache默认使用80端口，如果80端口被占用，apache就会启动失败。目前我已知的会占用80端口的软件有：迅雷，IIS，Skype。欢迎补充！<br></font></p>
<p><strong>解决办法</strong><br></p>
<ol>
<li>修改apache的默认端口，或者开机后，立即启动apache，让它使用80端口。</li>
<li>也可以关闭或杀死使用80端口的软件，但如果是IIS，最好修改一下端口。</li>
</ol>
<h2 id="apache无法启动终极解决办法">apache无法启动终极解决办法</h2><p><font size="4"><br>上面所说的只是比较特殊的情况，也许并不能找到问题之所在。下面说一个比较一般的方法，对各种问题基本通吃–使用命令行启动apache服务。用命令行模式启动apache，并带上参数，apache会提示你哪句有误，然后就可以针对性的解决，可以发现端口冲突问题，软件冲突问题，http.conf配置问题等。</font></p>
<ol>
<li>在N:\MyWorks\Apache\bin目录处打开cmd命令行，输入如下命令：</li>
</ol>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">httpd<span class="class">.exe</span> -w -n <span class="string">"Apache"</span> -k start</span><br></pre></td></tr></table></figure>
<p>这里，引号内的是你的apache服务的名称，不同的机子可以有些许差别。</p>
<ol>
<li>之后等一会，如果启动不成功，会提示详细的错误信息。根据错误信息，去做响应的修改即可。</li>
<li>我的问题是启动服务时提示the requested operation has failed，一开始以为是80端口被占用的问题，用netstat -ano一看，80端口没有被占用啊！但就是启动不了，很郁闷。使用上述方法用命令行启动后，提示信息如下：<br><img src="http://img.blog.csdn.net/20151016095853606" alt="这里写图片描述"></li>
<li>我明明配置apache监听80端口，也就是默认的，但是竟然还需要监听443端口，难怪，443端口被别的软件所占用了，apache启动自然报错了！不过，有这个方法，以后apache出问题也可以很好地差错了。</li>
<li>关于如何kill掉占用端口的进程：用netstat -ano找到占用该端口的进程号，也就是PID，然后打开任务管理器，切换到【服务】一栏：<br><img src="http://img.blog.csdn.net/20151016100602872" alt="这里写图片描述"></li>
</ol>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><p><font size=4><br>在使用apache的过程中，遇到了很多问题，也学会了很多，特将一些常见的问题总结出来，以供参考。</p>]]>
    
    </summary>
    
      <category term="apache" scheme="http://blog.54yongf.com/tags/apache/"/>
    
      <category term="杂谈" scheme="http://blog.54yongf.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="杂谈" scheme="http://blog.54yongf.com/categories/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[No41-原-Ubuntu用apt-get方式安装php5.6]]></title>
    <link href="http://blog.54yongf.com/%E6%9D%82%E8%B0%88/41.html"/>
    <id>http://blog.54yongf.com/杂谈/41.html</id>
    <published>2016-03-31T10:27:37.000Z</published>
    <updated>2016-03-31T10:27:37.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p><font size="4"><br>请注意，本文讲述的不是编译安装php5.6！！！<br>如果电脑上安装了php5.5.9或者以下（php5）的版本，先卸载之。</font></p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="keyword">get</span> autoremove php5</span><br></pre></td></tr></table></figure>
<p>然后使用<code>php -v</code>查看php是否卸载成功。如果提示<code>No such file or directory</code>说明卸载成功。</p>
<h2 id="添加php5-6的PPA源">添加php5.6的PPA源</h2><p>下面有三个选择，分别对应php5.4, php5.5, php5.6。请自行选择</p>
<figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//安装ph<span class="variable">p5</span>.4</span><br><span class="line">sudo<span class="instruction"> add-apt-repository </span>ppa:ondrej/ph<span class="variable">p5</span>-oldstable</span><br><span class="line">//安装ph<span class="variable">p5</span>.5</span><br><span class="line">sudo<span class="instruction"> add-apt-repository </span>ppa:ondrej/ph<span class="variable">p5</span></span><br><span class="line">//安装ph<span class="variable">p5</span>.6</span><br><span class="line">sudo<span class="instruction"> add-apt-repository </span>ppa:ondrej/ph<span class="variable">p5</span>-5.6</span><br></pre></td></tr></table></figure>
<h2 id="更新源并安装php5-6">更新源并安装php5.6</h2><p><font size="4"><br>添加完源之后，安装php5.6：</font></p>
<figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> <span class="keyword">update</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> install php5-<span class="number">5.6</span></span><br></pre></td></tr></table></figure>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><p><font size="4"><br>请注意，本文讲述的不是编译安装php5.6！！！<br>如果电脑上安装了php5.5.9或者以下（php5）的版本，先卸载之。</font></p>
<figure class="highlight]]>
    </summary>
    
      <category term="Ubuntu" scheme="http://blog.54yongf.com/tags/Ubuntu/"/>
    
      <category term="杂谈" scheme="http://blog.54yongf.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="杂谈" scheme="http://blog.54yongf.com/categories/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[No40-原-Git push的时候出错状况及其解决办法]]></title>
    <link href="http://blog.54yongf.com/Git/40.html"/>
    <id>http://blog.54yongf.com/Git/40.html</id>
    <published>2016-03-29T14:24:39.000Z</published>
    <updated>2016-03-29T15:44:29.000Z</updated>
    <content type="html"><![CDATA[<h2 id="先说问题">先说问题</h2><p><font size="4"><br>老规矩，先说问题。今天想把之前做的一个博客项目<a href="http://www.thinkblog.org" target="_blank" rel="external">ThinkBlog</a>推送到Github。但是遇到了一个以前从没遇到过的问题。错误信息如下：</font></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fatal: The remote end hung up unexpectedly</span><br><span class="line">fatal: The remote end hung up unexpectedly</span><br><span class="line">error: RPC failed; result=7, HTTP code = 0</span><br></pre></td></tr></table></figure>
<p>弄了好久才把这个问题干掉，特来分享。</p>
<h2 id="解决办法">解决办法</h2><p><font size="4"><br>我是在stackoverflow上找到的答案。原链接如下：<a href="http://stackoverflow.com/questions/15240815/git-fatal-the-remote-end-hung-up-unexpectedly。" target="_blank" rel="external">http://stackoverflow.com/questions/15240815/git-fatal-the-remote-end-hung-up-unexpectedly。</a></font></p>
<ol>
<li>运行：git config –global http.postBuffer 524288000</li>
<li>重新推送</li>
<li>OK！</li>
</ol>
<h2 id="其他">其他</h2><p><font size="4"><br>如果一次性推送的文件内容过多，也可能会引发上述问题。</font></p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="先说问题">先说问题</h2><p><font size="4"><br>老规矩，先说问题。今天想把之前做的一个博客项目<a href="http://www.thinkblog.org" target="_blank" rel="external">ThinkB]]>
    </summary>
    
      <category term="Git" scheme="http://blog.54yongf.com/tags/Git/"/>
    
      <category term="Git" scheme="http://blog.54yongf.com/categories/Git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[No39-原-Java核心技术读书笔记]]></title>
    <link href="http://blog.54yongf.com/Java/39.html"/>
    <id>http://blog.54yongf.com/Java/39.html</id>
    <published>2016-03-20T08:54:27.000Z</published>
    <updated>2016-04-26T11:35:02.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Java核心技术读书笔记">Java核心技术读书笔记</h2><font size="4">

<ol>
<li>在Java中，共有8种基本类型：4种整型（int4,short2,long8,byte1）、2种浮点类型（float4,double8）、字符类型（char2表示Unicode编码的字符单元）、boolean类型（1bit）<a id="more"></a></li>
<li>强烈建议不要在程序中使用char类型，除非确实需要对UTF-16代码单元进行操作（char类型用UTF-16编码描述一个代码单元）:( Why?</li>
<li>整型和布尔型不能相互转换</li>
<li>&amp;&amp;和||是按照短路方式求值的。&amp;和|运算符不按照短路方式计算！</li>
<li>对移位运算符右侧的参数需要进行模32的运算（除非左边的操作数是long类型，此时需模64）。例如，1 &lt;&lt; 35和1 &lt;&lt; 3是相等的</li>
<li>String类对象是不可变字符串。编译器可以让字符串共享</li>
<li>字符串比较使用equals方法，千万不要使用==！这个运算符只能确定两个字符串是否放置在同一个虚拟机中位置上（虚拟机完全可能将内容相同的多个字符串的拷贝位置放在不同的地方！）</li>
<li>如果需要用许多小段的字符串构建一个字符串，那么应该使用StringBuilder。在JDK5.0中引入StringBuilder类。这个类的前身是StringBuffer，其效率稍微有些低，但是允许采用多线程的方式执行添加或删除字符的操作。如果所有的字符串都在一个单线程中编辑（通常情况下），应该用StringBuilder替代它。</li>
<li>在C++中可以在嵌套的块中重定义一个变量（内层定义的变量会覆盖外层定义的变量），但是这在Java中是不允许的！</li>
<li>在循环中，检测两个浮点数是否相等需要格外小心！注意舍入误差，即可能浮点数无法用二进制完全表示。</li>
<li>switch语句的case标签可以是：1. 类型为char, byte, short, int（或者其包装类Character, Byte, Short, Integer）；2. 枚举常量；3. 字符串字面量（Since JDK7.0）</li>
<li>字符串长度string.length()。数组的长度array.length</li>
<li>数组长度可以为0，和null不同</li>
<li>Java中的[]运算符被预定义为检查数组边界，并且没有指针运算，即不能通过a+1得到下一个数组元素</li>
<li>如果将一个方法应用于null对象上，就会产生空指针异常，这是RuntimeException运行时异常</li>
<li>全局变量会自动初始化，局部变量不会自动初始化。</li>
<li>所有Java对象都存储在堆中。</li>
<li>当且仅当没有给类显式提供任何构造器的情况下，系统才会提供一个默认的构造器</li>
<li>关于初始化块：首先运行初始化块，然后才运行构造器的主体部分。不过，通常把初始化代码放在构造器中就行了。</li>
<li>如果在一个类的构造器A中调用另一个构造器B，该调用代码必须写在构造器A的第一行！</li>
<li><p>Java程序可以没有main方法（但是JDK1.8不可以了）。代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello, World"</span>);</span><br><span class="line">        System.exit(<span class="number">0</span>);</span><br><span class="line">    &#125;	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>静态方法与类绑定–静态绑定。实例化变量之后，变量是什么类型的，就会调用那个类的静态方法（其实是废话）</p>
</li>
<li>方法的名字和参数列表称为方法的签名，返回类型不是签名的一部分！</li>
<li>动态绑定。在运行的时候，调用parent.method的解析过程<ol>
<li>首先，虚拟机提取object的实际类型的方法表。这既可能是Parent类型，Child1类型，Child2类型…类的其他子类的方法表</li>
<li>接下来，虚拟机搜索定义method签名的类。此时，虚拟机可以知道应该调用哪个方法。</li>
<li>最后，虚拟机调用方法。</li>
</ol>
</li>
<li><p>类强制转换：1. 只能在继承层次内进行类型转换。2. 在将父类转换成子类之前，应该使用instanceof进行检查。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (parent <span class="keyword">instanceof</span> child) &#123;</span><br><span class="line">    result = (child)parent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>通过类型转换调整对象的类型并不是一种好的做法。</p>
</li>
<li>Java中的受保护部分对于所有子类以及同一个包中的其他所有类都是可见的。</li>
<li>4个访问修饰符：<ol>
<li>private: 仅仅对本类可见</li>
<li>public: 对所有类可见</li>
<li>protected: 对本包和所有子类可见</li>
<li>default: 默认，对本包可见，不需要修饰符</li>
</ol>
</li>
<li>在Java中，只有基本类型不是对象，其他一切皆对象。</li>
<li>如果两个对象持有相同的引用，那么它们一定是相等的。</li>
<li>对于数组类型的域，可以使用静态的Arrays.equals方法检测相应的数组元素是否相等。</li>
<li>字符串的散列码hashCode是由内容导出的。在StringBuffer内部没有定义hashCode方法，它的散列码是由Object类的默认hashCode到处的对象存储地址。</li>
<li>建议：Equals和hashCode的定义一致。两个相等的对象拥有相等的散列码。空对象的散列码为0</li>
<li>ArrayList从JDK7.0开始，可以省略右边的类型参数</li>
<li>JDK5.0之前没有提供泛型类，而是有一个ArrayList类，其中保存的类型是Object，它是自适应大小的集合</li>
<li>ArrayList的CRUD都不能越界！</li>
<li>9个包装器类（Integer, Long, Float, Double, Short, Byte, Character, Void, Boolean）。对象包装器类是不可变的，一旦构造了包装器，就不允许改变其中的值。同时，对象包装器类还是final，因此不能定义它们的子类</li>
<li>自动装箱、自动拆箱</li>
<li>自动装箱规范要求boolean, byte, char &lt;= 127 ,介于-128~127之间的short和int被包装到固定的对象中。装箱和拆箱是编译器认可的，而不是虚拟机。</li>
<li>Java中方法都是值传递的</li>
<li>JDK5.0之前，每个Java方法都有固定数量的参数，但是之后支持变参方法Vararg</li>
<li>只在必要的时候使用反射。</li>
<li>接口中的所有方法自动地属于public，常量都自动是public static final。不能有实例域和静态方法！</li>
<li>默认的克隆操作是浅拷贝，如果要深拷贝，必须重载clone</li>
<li>内部类可以访问外围类的私有变量。内部类引用局部变量，必须是final</li>
<li>final变量可以为空（全局变量，自动初始化）</li>
<li>当内部类不需要访问外围类对象的时候，应该使用静态内部类（其它都一样）。声明在接口中的内部类自动成为static, public类</li>
<li>代理（since JDK1.3）：利用代理可以在运行时创建一个实现了一组给定接口的新类。只有在编译时无法确定需要实现哪个接口时才有必要使用。</li>
<li>Throwable =&gt; Error + Exception.由程序错误导致的异常属于RuntimeException；而程序本身没有问题，但由于像I/O错误这类问题导致的异常属于其他异常</li>
<li>常见的RuntimeException：1. 错误的类型转换ClassCastException。2. 数组访问越界IndexOutOfBoundException。3. 访问空指针NullPointerException</li>
<li>其他异常：1. 试图在文件尾部后面读取数据。2. 试图打开一个不存在的文件。3. 试图根据给定的字符串查找Class对象，而这个字符串表示的类并不存在。</li>
<li>Java语言规范将派生于Error类或RuntimeException类的所有异常成为未检查unchecked异常，所有其他的异常称为已检查异常checked</li>
<li>实际上，所有的错误都发生在运行时。</li>
<li>假设在try和finally块中均含有return语句，利用return语句从try语句块中退出。在方法返回前，finally子句的内容将被执行。如果finally子句中也有一个return语句，这个返回值会覆盖原来的返回值。</li>
<li>泛型程序设计意味着编写的代码可以被很多不同类型的对象所重用</li>
<li>数组在连续的存储位置上存放对象引用，链表将每个对象存放在独立的结点中。在Java中，所有链表实际上都是双向链表</li>
<li>为了避免发生并发修改的异常，请遵循下述规则：可以根据需要给容器添加许多迭代器，但是这些迭代器只能读取列表。另外，再单独附加一个既能读又能写的迭代器</li>
<li>list的get方法（最好不要使用）：每次查找一个元素都要从列表的头部重新开始搜索。LinkedList对象根本不做任何缓存位置信息的操作。</li>
<li>TreeSet树集（有序集合）：在对集合进行遍历时，每个值将自动地按照排序后的顺序呈现。</li>
<li>TreeSet添加元素快于数组|链表，慢于散列表。如果树中包含n个元素，查找新元素的正确位置平均需要log2 n次比较。</li>
<li>优先级队列（Priority Queue）中的元素可以按照任意的顺序插入，却总是按照排序的顺序进行检索（所以，总是获得最小的那个元素）。优先级队列使用了堆（heap）-一个可以自我调整的二叉树。</li>
<li>Hashtable和HashMap几乎是一样的。唯一的区别是：Hashtable的方法是同步的，而HashMap不是。</li>
<li>如果向一个变量写入值，而这个变量接下来可能会被另一个线程读取，或者，从一个变量读值，而这个变量可能是之前被另一个线程写入的，此时必须使用同步</li>
<li>volatile关键字为实例域的同步访问提供了一种免锁机制。如果声明一个域为volatile，那么编译器和虚拟机就知道该域是可能被另一个线程并发更新的。</li>
<li>对象序列化是以特殊的文件格式存储对象数据的。（每个文件都是以AC ED开头的）</li>
<li>Path和Files类since JDK7.0</li>
<li>每个Java程序至少拥有三个类加载器：1. 引导类加载器。2. 扩展类加载器。3. 系统类（应用类）加载器。引导类加载器负责加载系统类（通常从JAR文件rt.jar中进行加载），引导类加载器没有对应的ClassLoader对象。扩展类加载器用于从jre/lib/ext目录加载标准扩展。系统类加载器用于加载应用类。引导类加载器通常使用C语言实现的，扩展类加载器和系统类加载器通常是用Java来实现的。</li>
</ol>
<h4 id="volatile变量不能提供原子性！">volatile变量不能提供原子性！</h4><p><font size="4"><br>volatile只提供了保证访问该变量时，每次都是从内存中读取最新值，并不会使用寄存器缓存该值——每次都会从内存中读取。而对该变量的修改，volatile并不提供原子性的保证。那么编译器究竟是直接修改内存的值，还是使用寄存器修改都符合volatile的定义。所以，一句话，volatile并不提供原子性的保证。所以，下面的代码并不能确保number的递增。还是要使用synchronized</font></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">int</span> number = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add_number</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ++number;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="字节码校验">字节码校验</h4><p><font size="4"><br>在类加载器将新加载的字节码传递给虚拟机时，这些字节码首先要接受校验器的校验。下面是校验器执行的一些检查：</font></p>
<ol>
<li>变量要在使用之前初始化</li>
<li>方法调用与对象引用类型之间要匹配</li>
<li>访问私有变量和方法的规则没有被违反</li>
<li>对本地变量的访问都落在运行时堆栈内</li>
<li>运行时堆栈没有溢出</li>
</ol>
<h4 id="调用构造器的具体处理步骤">调用构造器的具体处理步骤</h4><font size="4">

<ol>
<li>所有数据域被初始化为默认值（0 =&gt; 数值型, false =&gt; 布尔型, null =&gt; 对象类型）</li>
<li>按照在类声明中出现的次序，依次执行所有域初始化语句和初始化块</li>
<li>如果在构造器第一行调用了第二个构造器，则执行第二个构造器的主体</li>
<li>执行这个构造器的主体</li>
</ol>
<h4 id="泛型的约束和局限性">泛型的约束和局限性</h4><ol>
<li>不能用基本类型实例化类型参数（用包装类）</li>
<li>运行时类型查询只适用于原始类型</li>
<li>不要创建参数化类型的数组</li>
<li>不能实例化类型变量</li>
<li>泛型类的静态（变量、方法）上下文中类型无效</li>
</ol>
<h4 id="对象拷贝与对象克隆的区别">对象拷贝与对象克隆的区别</h4><ol>
<li>当拷贝一个对象时，原始变量和拷贝变量引用同一个对象</li>
<li>当克隆一个对象时，引用新的对象</li>
</ol>
<h4 id="编写equals方法的建议">编写equals方法的建议</h4><ol>
<li>显式参数命名为otherObject，稍后需要将它转换成另一个叫做other的变量。</li>
<li>检测this与otherObject是否引用同一个对象，即如果this == otherObject，返回true</li>
<li>检测otherObject是否为null，如果是null，返回false</li>
<li>比较this与otherObject是否属于同一个类。如果equals的语义在每个子类都有变化，就用getClass判断。如果所有的子类都拥有统一的语义，就用instanceof检测</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!(getClass() == otherObject.getClass()) </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!(otherObject <span class="keyword">instanceof</span> ClassName))</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br></pre></td></tr></table></figure>
<ol>
<li>将otherObject转换为相应的类类型变量</li>
<li>对所有需要比较的域进行比较。使用==比较基本类型于，使用equals比较对象与。如果所有的域都匹配，就返回true；否则返回false。</li>
<li><p>如果在子类中重新定义equals，就要在其中包含调用super.equals(other)。</p>
<h2 id="关于动态绑定">关于动态绑定</h2><p><font size="4"><br>必须明确的一点是,动态绑定针对的是对象的方法,这一点尤为重要!因此,在向上转型的情况下，对象的方法可以找到子类，而对象的属性还是父类的属性。</font></p>
</li>
</ol>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
</font></font>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Java核心技术读书笔记">Java核心技术读书笔记</h2><font size=4>

<ol>
<li>在Java中，共有8种基本类型：4种整型（int4,short2,long8,byte1）、2种浮点类型（float4,double8）、字符类型（char2表示Unicode编码的字符单元）、boolean类型（1bit）]]>
    
    </summary>
    
      <category term="Java" scheme="http://blog.54yongf.com/tags/Java/"/>
    
      <category term="Java核心技术" scheme="http://blog.54yongf.com/tags/Java%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF/"/>
    
      <category term="读书笔记" scheme="http://blog.54yongf.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="http://blog.54yongf.com/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[No38-原-Ubuntu v14.04使用小技巧]]></title>
    <link href="http://blog.54yongf.com/%E6%9D%82%E8%B0%88/38.html"/>
    <id>http://blog.54yongf.com/杂谈/38.html</id>
    <published>2016-03-18T08:52:34.000Z</published>
    <updated>2016-03-18T08:52:34.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Ubuntu_v14-04使用小技巧">Ubuntu v14.04使用小技巧</h2><font size="4">


<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
</font>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Ubuntu_v14-04使用小技巧">Ubuntu v14.04使用小技巧</h2><font size="4">


<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并]]>
    </summary>
    
      <category term="Linux" scheme="http://blog.54yongf.com/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="http://blog.54yongf.com/tags/Ubuntu/"/>
    
      <category term="杂谈" scheme="http://blog.54yongf.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="杂谈" scheme="http://blog.54yongf.com/categories/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[No37-原-ThinkPHP3.2.3学习笔记]]></title>
    <link href="http://blog.54yongf.com/PHP/37.html"/>
    <id>http://blog.54yongf.com/PHP/37.html</id>
    <published>2016-03-16T11:19:25.000Z</published>
    <updated>2016-03-16T11:19:25.000Z</updated>
    <content type="html"><![CDATA[<h2 id="说在前面">说在前面</h2><p><font size="4"><br>最近接到了一个紧急任务（一个课程设计），要在一周之内做出一个轻型博客系统，必须快速开发，于是我想到了thinkphp。虽然我之前学过一个PHP，也早就听说过thinkphp，但是对thinkphp是一无所知，火速下载官方文档。开始学习！</font></p>
<a id="more"></a>
<h2 id="thinkphp学习笔记">thinkphp学习笔记</h2><font size="4">

<ol>
<li>获取变量I方法的变量类型、变量名和点之间不能有空格，否则出错</li>
<li>空操作是指系统在找不到请求的操作方法的时候，会定位到空操作_empty方法来执行，利用这个机制，我们可以实现错误页面和一些URL的优化。</li>
<li>假设访问的链接是<a href="http://localhost/thinkphp/index.php/Home/City/beijing/，如果你修改了默认的操作方法后缀：`&#39;ACTION_SUFFIX" target="_blank" rel="external">http://localhost/thinkphp/index.php/Home/City/beijing/，如果你修改了默认的操作方法后缀：`&#39;ACTION_SUFFIX</a>‘ =&gt; ‘Action’`，然后你想要利用_empty方法输出beijing这个参数（实际上thinkphp一开始认为这是操作方法），那么，_empty($city)方法获取的$city是beijingAction而不是你想要的beijing，这是因为thinkphp默认beijing是操作方法，自动加上了后缀Action。这时，你可以通过thinkphp内置的ACTION_NAME获取beijing！</li>
<li>如果在某个模型类里面定义了connection属性的话（数组、DSN均可），则实例化该自定义模型的时候会采用定义的数据库连接信息，而不是配置文件中设置的默认连接信息，通常用于某些数据表位于当前数据库连接之外的其它数据库。</li>
<li>需要注意的是，ThinkPHP的数据库连接的惰性的，所以并不是在实例化的时候就连接数据库，而是在有实际的数据操作的时候才会去连接数据库（额外的情况是，在系统第一次实例化模型的时候，会自动连接数据库获取相关模型类对应的数据表的字段信息）。</li>
<li>where方法的用法是ThinkPHP查询语言的精髓，也是ThinkPHP ORM的重要组成部分和亮点所在，可以完成包括普通查询、表达式查询、快捷查询、区间查询、组合查询在内的查询操作。使用字符串条件的时候，建议配合预处理机制，确保更加安全。</li>
<li>一般情况下，无需调用table方法，默认会自动获取当前模型对应或者定义的数据表。</li>
<li>thinkphp中Include标签支持在包含文件的同时传入参数，但是要注意！使用变量时用[]符号把变量名包起来（<font color="red">不包括$符号！</font>）</li>
<li>如果插入数据时提示Field <em>*</em> doesn’t have a default value，可以是字段名有问题，有么拼错了，要么是大小写的问题（比如全部换成大写或小写试试？）</li>
<li>给模板传递变量数组，比如<code>$this-&gt;assign($data)</code>，这里$data是一个数组（$data[‘time’], $data[‘user’]），有两个属性。那么，在模板中，可以直接使用{$time}、{$user}来输出值。注意别写成{$data.time}了哦！</li>
<li>在thinkphp中使用jQuery的ajax，注意参数正确。最后，如果觉得代码实在没错，重启下服务器试试？</li>
</ol>
<h2 id="再贴一下thinkphp官方开发规范">再贴一下thinkphp官方开发规范</h2><font size="4">

<ol>
<li>类文件都是以.class.php为后缀（这里是指的ThinkPHP内部使用的类库文件，不代表外部加载的类库文件），使用驼峰法命名，并且首字母大写，例如 DbMysql.class.php；</li>
<li>类的命名空间地址和所在的路径地址一致，例如 Home\Controller\UserController类所在的路径应该是 Application/Home/Controller/UserController.class.php；</li>
<li>确保文件的命名和调用大小写一致，是由于在类Unix系统上面，对大小写是敏感的（而ThinkPHP在调试模式下面，即使在Windows平台也会严格检查大小写）；</li>
<li>类名和文件名一致（包括上面说的大小写一致），例如 UserController类的文件命名是UserController.class.php， InfoModel类的文件名是InfoModel.class.php， 并且不同的类库的类命名有一定的规范；</li>
<li>函数、配置文件等其他类库文件之外的一般是以.php为后缀（第三方引入的不做要求）；</li>
<li>函数的命名使用小写字母和下划线的方式，例如 get_client_ip；</li>
<li>方法的命名使用驼峰法，并且首字母小写或者使用下划线“_”，例如 getUserName，_parseType，通常下划线开头的方法属于私有方法；</li>
<li>属性的命名使用驼峰法，并且首字母小写或者使用下划线“_”，例如 tableName、_instance，通常下划线开头的属性属于私有属性；</li>
<li>以双下划线“<strong>”打头的函数或方法作为魔法方法，例如 </strong>call 和 __autoload；</li>
<li>常量以大写字母和下划线命名，例如 HAS_ONE和 MANY_TO_MANY；</li>
<li>配置参数以大写字母和下划线命名，例如HTML_CACHE_ON；</li>
<li>语言变量以大写字母和下划线命名，例如MY_LANG，以下划线打头的语言变量通常用于系统语言变量，例如 _CLASS_NOT<em>EXIST</em>；</li>
<li>对变量的命名没有强制的规范，可以根据团队规范来进行；</li>
<li>ThinkPHP的模板文件默认是以.html 为后缀（可以通过配置修改）；</li>
<li>数据表和字段采用小写加下划线方式命名，并注意字段名不要以下划线开头，例如 think_user 表和 user_name字段是正确写法，类似 _username 这样的数据表字段可能会被过滤。</li>
</ol>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
</font></font>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="说在前面">说在前面</h2><p><font size=4><br>最近接到了一个紧急任务（一个课程设计），要在一周之内做出一个轻型博客系统，必须快速开发，于是我想到了thinkphp。虽然我之前学过一个PHP，也早就听说过thinkphp，但是对thinkphp是一无所知，火速下载官方文档。开始学习！</p>]]>
    
    </summary>
    
      <category term="PHP" scheme="http://blog.54yongf.com/tags/PHP/"/>
    
      <category term="thinkphp" scheme="http://blog.54yongf.com/tags/thinkphp/"/>
    
      <category term="PHP" scheme="http://blog.54yongf.com/categories/PHP/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[No36-原-老生常谈之如何获取最新版Chrome]]></title>
    <link href="http://blog.54yongf.com/%E6%9D%82%E8%B0%88/37.html"/>
    <id>http://blog.54yongf.com/杂谈/37.html</id>
    <published>2016-03-15T07:12:28.000Z</published>
    <updated>2016-03-15T07:12:28.000Z</updated>
    <content type="html"><![CDATA[<h2 id="如何获取最新版Chrome">如何获取最新版Chrome</h2><p><font size="4">就目前这个网络环境来说，对开发者甚是不利，不过该翻墙的还是得翻墙啊，毕竟Chrome大法好。那么问题就来了，如何获取最新版的Chrome呢（Chrome自动更新老是失败。）？其实稍微关注下还是有很多方法的，我亲自使用过的，觉得比较安全的也就知道一个。</font></p>
<a id="more"></a>
<h2 id="网址">网址</h2><p><font size="4">网址是：<a href="http://dl.chromeba.com" target="_blank" rel="external">http://dl.chromeba.com</a><br>感谢Chrome吧及相关支持者！玩贴吧的可以关注Chrome吧，置顶帖有教程<br><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No36-%E6%94%AF%E6%8C%81%EF%BC%81.jpg" alt="支持"></font></p>
<h2 id="注意！">注意！</h2><p><font size="5" color="red">前方高能！</font><br><br><br><br><br><br><br><br><br><br></p>
<ol>
<li>最好不要通过百度、腾讯管家、360、XX下载站下载Chrome，有风险</li>
<li>Chrome从V50开始不再支持XP，XP用户下载时请选择&lt;=V49的版本（不过老XP也该退休了）</li>
</ol>
<h2 id="其它">其它</h2><font size="4">

<ol>
<li>如果你在使用Chrome的过程中，出现了种种问题，比如打不开了（就像今天我这样，这也是写本文的缘由），比如点击的时候<strong>应用程序无法启动,因为应用程序的并行配置不正确</strong>，你就可以考虑重装Chrome了:(</li>
<li>在旧版本的Chrome卸载完全之前，可能无法安装新版本，具体表现就是双击Chrome安装包无反应。这时候，可能需要清理注册表，你可以用360、腾讯电脑管家等安全软件卸载，然后清理残留。但是我遇到的情况是根本无法卸载，系统无法找到Chrome，于是我将Chrome安装路径上的Google文件夹整个删除了（如果你还有其他Google就不能这样搞），然后用官方提供的<a href="http://7xo5vs.com1.z0.glb.clouddn.com/No36-chrome%E5%8D%B8%E8%BD%BD%20remove.reg" target="_blank" rel="external"><strong>remove.reg</strong></a>。使用方式是下载之后双击，然后导入注册表就OK了</li>
<li>注意！上述清理注册表的小工具会删除全部Google软件的注册表项，如果你的电脑上还有其他Google软件（Android Studio不算…），请慎重使用。</li>
</ol>
<h2 id="写在最后">写在最后</h2><p><font size="4">限于个人能力，上述可能有纰漏之处，如果你有不同看法，欢迎在评论中与我交流，荣幸之至。此外，如果你有其他的Chrome小技巧，也可以与我交流。</font></p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
</font>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="如何获取最新版Chrome">如何获取最新版Chrome</h2><p><font size=4>就目前这个网络环境来说，对开发者甚是不利，不过该翻墙的还是得翻墙啊，毕竟Chrome大法好。那么问题就来了，如何获取最新版的Chrome呢（Chrome自动更新老是失败。）？其实稍微关注下还是有很多方法的，我亲自使用过的，觉得比较安全的也就知道一个。</p>]]>
    
    </summary>
    
      <category term="Chrome" scheme="http://blog.54yongf.com/tags/Chrome/"/>
    
      <category term="杂谈" scheme="http://blog.54yongf.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="杂谈" scheme="http://blog.54yongf.com/categories/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[No35-原-Windows系统论设置还原点的重要性]]></title>
    <link href="http://blog.54yongf.com/%E6%9D%82%E8%B0%88/35.html"/>
    <id>http://blog.54yongf.com/杂谈/35.html</id>
    <published>2016-03-14T14:15:02.000Z</published>
    <updated>2016-03-14T14:15:02.000Z</updated>
    <content type="html"><![CDATA[<h2 id="论设置系统还原点的重要性">论设置系统还原点的重要性</h2><p><font size="4"><br>就在刚才，我室友的电脑又黑了，可能是之前他玩DNF开挂中毒了，然后又用360删了一波东西（趁机黑360 ^_^），结果重启之后电脑就GG了。无论怎么搞都进不了系统，最后只能重装了，一想到他昨天刚刚装完系统，又装了一堆软件（上课的软件+各种开发环境），搞了好半天才弄好的，结果现在又要重来，真是心累:-(<br>然后，我又想起了很久之前，我刚刚装完双系统，还没开始装X呢，用360清理了一波垃圾（再黑一波360 ^_^）。结果重启电脑之后又GG了，当时我的内心是崩溃的<br><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No35-%E5%BF%83%E5%A1%9E.jpg" alt="好心塞"><br>在这两次事件中，我和我室友当时都没有设置任何系统还原点，结果就只能重装系统了，倘若当时能够设置好还原点，就木有这么多烦恼了。关于如何设置系统还原点，网络上教程一大堆，我想也不必多说了。</font></p>
<p><font size="7">谨以此文悼念那些在我重装系统的过程中逝去的脑细胞！<br><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No35-%E5%93%8E%E5%91%A6%E4%B8%8D%E9%94%99%E5%93%A6.jpg" alt="挺好的"></font></p>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="论设置系统还原点的重要性">论设置系统还原点的重要性</h2><p><font size="4"><br>就在刚才，我室友的电脑又黑了，可能是之前他玩DNF开挂中毒了，然后又用360删了一波东西（趁机黑360 ^_^），结果重启之后电脑就GG了。无论怎么搞都进不了]]>
    </summary>
    
      <category term="Windows" scheme="http://blog.54yongf.com/tags/Windows/"/>
    
      <category term="杂谈" scheme="http://blog.54yongf.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="杂谈" scheme="http://blog.54yongf.com/categories/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[No34-原-向基于Android Studio的Android开发项目中导入第三方库]]></title>
    <link href="http://blog.54yongf.com/Android%E5%BC%80%E5%8F%91/34.html"/>
    <id>http://blog.54yongf.com/Android开发/34.html</id>
    <published>2016-03-06T11:44:24.000Z</published>
    <updated>2016-03-06T11:44:24.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>有大概两个月没写博客了，很惭愧。一月份写了去年最后一篇博客，然后就复习期末考试，然后是寒假，在家也没机会写，现在开学了，再加上最近在学习Android开发，需要导入第三方库，所以，今天就来谈谈如何在Android Studio中导入第三方库。<br><br></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">软件环境：</span><br><span class="line">Windows 7</span><br><span class="line">Android Studio 1.4</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="导入jar包">导入jar包</h2><p>导入jar包是最方便的，这也是我最想要的形式。<br>步骤如下：</p>
<ol>
<li><p>将jar包拷贝到app/libs目录之下。libs目录一般是自动创建的，如果没有可以手动创建</p>
<p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No34-1.png" alt="libs目录"></p>
</li>
<li><p>右键该jar包，Add as library… OK！</p>
<p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No34-2.png" alt="Add as library..."></p>
</li>
</ol>
<h2 id="导入gradle构建的开源库">导入gradle构建的开源库</h2><p>这个也很简单，步骤如下：</p>
<ol>
<li>首先下载该开源库，将其library拷贝到项目的根目录，也就是和app目录同级</li>
<li><p>在项目根目录有个settings.gradle，打开该文件，加入一行代码：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include ':LIBRARY_NAME'         //注意：LIBRARY_NAME为该开源库的名称，不要忘了冒号，gradle中以:作为分隔符</span><br></pre></td></tr></table></figure>
</li>
<li><p>在app目录下的build.gradle中加入一行代码：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile project(':LIBRARY_NAME')</span><br></pre></td></tr></table></figure>
</li>
<li><p>Sync Project</p>
</li>
</ol>
<h2 id="导入Eclipse构建的开源库">导入Eclipse构建的开源库</h2><p>稍微复杂一点，步骤如下：</p>
<ol>
<li>前两步同上，导入gradle构建的开源库</li>
<li><p>使用Eclipse构建的开源库是没有build.gradle文件的，这时需要新建一个，在其中写入必要的内容，可参考如下模版：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath 'com.android.tools.build:gradle:0.4.+'</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">apply plugin: 'android-library'</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compile 'com.android.support:support-v4:13.0.0'</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion 23</span><br><span class="line">    buildToolsVersion "23.0.2"</span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        minSdkVersion 7</span><br><span class="line">        targetSdkVersion 16</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sourceSets &#123;</span><br><span class="line">        main &#123;</span><br><span class="line">            java.srcDirs = ['src']</span><br><span class="line">            resources.srcDirs = ['src']</span><br><span class="line">            aidl.srcDirs = ['src']</span><br><span class="line">            renderscript.srcDirs = ['src']</span><br><span class="line">            res.srcDirs = ['res']</span><br><span class="line">            assets.srcDirs = ['assets']</span><br><span class="line"></span><br><span class="line">            manifest.srcFile 'AndroidManifest.xml'</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Sync Project</p>
</li>
</ol>
<h2 id="感谢">感谢</h2><p><font size="4">感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><p>有大概两个月没写博客了，很惭愧。一月份写了去年最后一篇博客，然后就复习期末考试，然后是寒假，在家也没机会写，现在开学了，再加上最近在学习Android开发，需要导入第三方库，所以，今天就来谈谈如何在Android Studio中导入第三方库。<br><br/></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">软件环境：</span><br><span class="line">Windows 7</span><br><span class="line">Android Studio 1.4</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="Android开发" scheme="http://blog.54yongf.com/tags/Android%E5%BC%80%E5%8F%91/"/>
    
      <category term="android studio" scheme="http://blog.54yongf.com/tags/android-studio/"/>
    
      <category term="Android开发" scheme="http://blog.54yongf.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[No33-原-根据语义规则产生布尔表达式三地址代码]]></title>
    <link href="http://blog.54yongf.com/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/33.html"/>
    <id>http://blog.54yongf.com/编译原理/33.html</id>
    <published>2016-01-08T12:07:19.000Z</published>
    <updated>2016-01-08T12:07:19.000Z</updated>
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p><font size="4"><br>考虑如下表达式：a &lt; b or c &lt; d and e &lt; f<br><br>假定整个表达式的真假出口已分别置为Ltrue和Lfalse，则按表下面的语义规则生成的三地址代码为？（假定and优先级高于or）<br></font></p>
<a id="more"></a>
<h2 id="产生布尔表达式三地址代码的语义规则">产生布尔表达式三地址代码的语义规则</h2><p><font size="4"><br>语义规则如下：<br><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No33%E5%B8%83%E5%B0%94%E8%A1%A8%E8%BE%BE%E5%BC%8F.png" alt="布尔表达式"></font></p>
<h2 id="生成三地址中间代码的步骤">生成三地址中间代码的步骤</h2><p><font size="4"><br>生成三地址中间代码的过程如下：<br></font></p>
<h3 id="语法树">语法树</h3><p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No33%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90%E6%A0%91.png" alt="语法分析树"></p>
<h3 id="对表达式进行归约">对表达式进行归约</h3><p><font size="4"><br>根据产生式，语义规则，进行相应的语义动作：<br></font></p>
<p><img src="http://7xo5vs.com1.z0.glb.clouddn.com/No33%E8%AF%AD%E4%B9%89%E8%AE%A1%E7%AE%97.png" alt="语义计算"></p>
<h3 id="三地址代码">三地址代码</h3><p><font size="4"><br>生成的三地址代码为：<br></font></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> a &lt; b <span class="keyword">goto</span> Ltrue</span><br><span class="line">    <span class="keyword">goto</span> L2</span><br><span class="line">L2: <span class="keyword">if</span> c &lt; d <span class="keyword">goto</span> L1</span><br><span class="line">    <span class="keyword">goto</span> Lfalse</span><br><span class="line">L1: <span class="keyword">if</span> e &lt; f <span class="keyword">goto</span> Ltrue</span><br><span class="line">    <span class="keyword">goto</span> Lfalse</span><br></pre></td></tr></table></figure>
<h2 id="感谢">感谢</h2><p><font size="4">　　感谢访问我的个人博客的朋友，如果您感觉本站对您搜索的问题有所帮助，并感觉对本站还满意的话，顶一下吧，希望您把本站分享给您的朋友！在此对您表示由衷的谢意！ :)</font></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="问题">问题</h2><p><font size=4><br>考虑如下表达式：a &lt; b or c &lt; d and e &lt; f<br/><br>假定整个表达式的真假出口已分别置为Ltrue和Lfalse，则按表下面的语义规则生成的三地址代码为？（假定and优先级高于or）<br/></p>]]>
    
    </summary>
    
      <category term="编译原理" scheme="http://blog.54yongf.com/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
      <category term="语义规则" scheme="http://blog.54yongf.com/tags/%E8%AF%AD%E4%B9%89%E8%A7%84%E5%88%99/"/>
    
      <category term="编译原理" scheme="http://blog.54yongf.com/categories/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
</feed>
